{"version":3,"file":"static/js/554.865d57d4.chunk.js","mappings":"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","sources":["components/Dashboard/Aside.jsx","components/Dashboard/components/ProductivityItem.jsx","components/Dashboard/components/Productivity.jsx","components/Dashboard/components/Header.jsx","components/Dashboard/components/Categories.jsx","components/Dashboard/components/Chatbots.jsx","components/Chatbots/LessonPlanner/ChatForm.jsx","components/Chatbots/Header.jsx","components/Chatbots/GoogleButtons/Login.jsx","components/Chatbots/ExportButtons.jsx","components/Chatbots/Answer.jsx","components/Chatbots/Loading.jsx","components/Chatbots/ShortForm.jsx","components/Dashboard/history/Content.jsx","components/Dashboard/history/History.jsx","components/Chatbots/ExamplePrompts.jsx","components/Chatbots/AnswerAndHistory.jsx","components/Chatbots/LessonPlanner/LessonPlanner.jsx","components/Chatbots/Quiz/ChatForm.jsx","components/Chatbots/Quiz/Quiz.jsx","components/Chatbots/Essay/ChatForm.jsx","components/Chatbots/Essay/Essay.jsx","components/Chatbots/LessonComprehension/ChatForm.jsx","components/Chatbots/LessonComprehension/LessonComprehension.jsx","components/Chatbots/MathQuiz/ChatForm.jsx","components/Chatbots/MathQuiz/MathQuiz.jsx","components/Chatbots/MathLessonPlanner/ChatForm.jsx","components/Chatbots/MathLessonPlanner/MathLessonPlanner.jsx","components/Chatbots/VideoToNotes/ChatForm.jsx","components/Chatbots/VideoToNotes/VideoToNotes.jsx","components/Chatbots/VideoToQuiz/ChatForm.jsx","components/Chatbots/VideoToQuiz/VideoToQuiz.jsx","components/Chatbots/DetectAI/ChatForm.jsx","components/Chatbots/DetectAI/Loading.jsx","components/Chatbots/DetectAI/DetectAI.jsx","components/Chatbots/PowerPoint/ChatForm.jsx","components/Chatbots/PowerPoint/Loading.jsx","components/Chatbots/PowerPoint/PowerPoint.jsx","components/Dashboard/Settings/Layout.jsx","components/Dashboard/Settings/components/Profile.jsx","components/Dashboard/Settings/components/ChangePassword.jsx","components/Dashboard/Settings/components/DeleteAccount.jsx","components/Dashboard/Settings/components/ChangeEmail.jsx","components/Dashboard/Settings/components/TwoFA.jsx","components/Dashboard/Settings/Settings.jsx","components/Dashboard/UserDashboard.jsx","components/Donut/DonutChart.jsx","context/UsageContext.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Aside.css';\nimport { UserContext } from '../../context/UserContext';\nimport { UsageContext } from '../../context/UsageContext';\n\nconst Aside = ({ selectedCategory, setSelectedCategory }) => {\n\n    const { logout } = useContext(UserContext)\n    const { fetchUsage, usage, creditWidth, uploadBarWidth } = useContext(UsageContext)\n\n    // console.log('PathNam: ', pathname);\n\n\n    useEffect(() => {\n        fetchUsage();\n        console.log(usage);\n        console.log('width: ', Math.floor((usage?.usageCount * 100) / usage?.usageLimit));\n    }, [])\n\n    return (\n        <div className=\"\">\n            <ul className=\"space-y-2 md:space-y-4 grid grid-cols-1\">\n                {/* <li>\n                        <Link to=\"/user/dashboard\" className={`flex items-center rounded-xl font-bold text-sm text-yellow-900 py-3 px-4`}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" className=\"text-lg mr-2\" viewBox=\"0 0 16 16\">\n                                <path d=\"M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2zm-3.5-7h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5z\" />\n                            </svg>\n                            Dashboard\n                        </Link>\n                    </li> */}\n                {/* <li>\n                        <Link to=\"/user/dashboard/history\" className={`flex rounded-xl font-bold text-sm text-gray-900 py-3 px-4`}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" className=\"text-lg mr-2\" viewBox=\"0 0 16 16\">\n                                <path d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM5 4h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1z\" />\n                            </svg>\n                            History (chats)\n                        </Link>\n                    </li> */}\n                <li className=''>\n                    <Link to=\"/user/dashboard/chatbots\" className={`flex rounded-xl font-bold text-sm text-gray-900 py-3 px-4`}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" className=\"text-lg mr-2\" viewBox=\"0 0 16 16\">\n                            <path d=\"M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.825a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3zm-8.322.12C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139z\" />\n                        </svg>\n                        Chatbots\n                    </Link>\n                    {/* {\n                            <div className=' pl-3 pr-2 overflow-y-scroll h-[40vh]'>\n                                <Productivity />\n                            </div>\n                        } */}\n                    {/* <AsideCategories /> */}\n                </li>\n\n                <li>\n                    <div className={`flex rounded-xl py-3 px-4`}>\n\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" className=\"text-lg mr-2\" viewBox=\"0 0 16 16\">\n                            <path d=\"M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2zm-3.5-7h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5z\" />\n                        </svg>\n                        <div className=' flex flex-col gap-1'>\n                            <p className='font-bold text-sm text-yellow-900'>Credits</p>\n                            <p>{usage?.plan} Plan</p>\n                        </div>\n                    </div>\n                    {/* <br /> */}\n                    <div className=' mx-4 mt-2'>\n                        <div className=\"font-bold text-xs\">\n                            Number of Chat Requests\n                        </div>\n                        <div className=' h-3 border border-blue-400 rounded-full overflow-hidden'>\n                            <div className={`bg-blue-500 h-full`} style={{ width: `${creditWidth}%` }}></div>\n                        </div>\n\n                        <p className=' text-blue-600 font-bold text-xs mt-2'>\n                            {/* {usage?.usageCount === 1 ? \"No daily credits used\" : `${usage?.usageCount - 1} / ${usage?.usageLimit}`} */}\n                            {`${usage?.usageCount} / ${usage?.usageLimit}`}\n                            <span className='ml-4'>[Today]</span>\n                        </p>\n\n                        {/* <p className=' text-blue-600 font-bold text-xs mt-2'>\n                                <p className='mb-2'>Storage</p>\n                                {usage?.storageUsed.toFixed(2)} <span className='ml-.5'>MB</span>\n                                /\n                                {usage?.storageLimit}<span className='ml-.5'>GB</span>\n                            </p> */}\n                        <p className=' text-blue-600 font-bold text-xs mt-5'>\n                            <p className='mb-1'>Number of Files Upload</p>\n                            <div className=' mb-2 h-3 border border-blue-400 rounded-full overflow-hidden'>\n                                <div className={`bg-blue-500 h-full`} style={{ width: `${uploadBarWidth}%` }}></div>\n                            </div>\n                            {usage?.noOfFilesUploaded} / {usage?.noOfFilesUploadedLimit} Month\n                        </p>\n                    </div>\n                </li>\n\n                <li>\n                    <Link to=\"/user/dashboard/settings\" className={`flex items-center rounded-xl font-bold text-sm text-yellow-900 py-3 px-4`}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" className=\"text-lg mr-2\" viewBox=\"0 0 16 16\">\n                            <path d=\"M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2zm-3.5-7h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5z\" />\n                        </svg>\n                        Settings\n                    </Link>\n                </li>\n\n                <li>\n                    <div onClick={logout} className={`flex items-center rounded-xl font-bold text-sm text-yellow-900 py-3 px-4 cursor-pointer`}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" className=\"text-lg mr-2\" viewBox=\"0 0 16 16\">\n                            <path d=\"M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2zm-3.5-7h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5z\" />\n                        </svg>\n                        Logout\n                    </div>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Aside","import { Link } from \"react-router-dom\"\n\nconst ProductivityItem = ({ el }) => {\n\n\n    return (\n        <Link to={`/user/dashboard/chatbot/${el?.url ? el.url : \"\"}`} >\n            <div className={`flex flex-col gap-5 rounded-xl px-5 py-5 min-h-[250px]`}\n                style={{\n                    boxShadow: '0px 0px 38px -11px rgba(0,0,0,0.35)'\n                }}\n            >\n                <div className='flex gap-4'>\n                    <img src={el.icon} className='h-16 w-16 rounded-xl' alt=\"bot icon\" />\n                    <div>\n                        <h4 className='text-lg font-semibold text-secondary'>\n                            {el.title}\n                        </h4>\n                        <span>{el.name? el.name : \"Bob\"}</span>\n                    </div>\n                </div>\n                <p className='text-secondary'>{el.description}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default ProductivityItem","import ProductivityItem from './ProductivityItem'\nimport { useContext } from 'react'\nimport { ChatbotContext } from '../../../context/ChatbotContext'\nconst Productivity = () => {\n\n    const { chatbots } = useContext(ChatbotContext);\n\n    return (\n        <div className='flex flex-col my-5 px-4 md:px-0 gap-5 py-7'>\n\n\n            <div className='grid grid-cols-1 md:grid-cols-3 gap-7'>\n                {\n                    chatbots.map((el, i) => (\n                        <ProductivityItem el={el} key={i} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Productivity","import React from 'react'\n\nconst Header = ({ heading, desc }) => {\n    return (\n        <div>\n            <h1 className=' capitalize text-3xl font-semibold text-secondary'>\n                {heading}\n            </h1>\n            {\n                desc && (\n                    <p>\n                        Which teachers assistance would you like?\n                    </p>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Header","import React, { useContext } from 'react'\nimport { ChatbotContext } from '../../../context/ChatbotContext'\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Categories = () => {\n\n    const navigate = useNavigate();\n    const { pathname } = useLocation();\n\n    const { filterChatbots, selectedCategory } = useContext(ChatbotContext);\n\n\n    const handleClick = (category) => {\n        filterChatbots(category);\n\n        if (!pathname.includes('chatbots')) {\n            navigate('/user/dashboard/chatbots')\n        }\n    }\n\n    function truncateString(str, limit) {\n        if (str.length > limit) {\n          return str.slice(0, limit) + \"...\";\n        }\n        return str;\n      }\n    return (\n        <div className='my-5'>\n            <div className='flex flex-row gap-4 flex-wrap'>\n                {\n                    [\n                        \"All\",\n                        \"Lesson Planning\",\n                        \"Student Engagement & Activity Ideas\",\n                        \"Special Education & English Second Language\",\n                        \"Communication & Professional Learning\",\n                        \"Digital Learning & Teaching Tools\",\n                        \"Assessment & Progress Monitoring\"\n                    ].map((el, i) => (\n                        <div\n                            className={` min-w-min border border-secondary rounded-full px-3 cursor-pointer ${selectedCategory === el ? 'bg-black text-white' : ''}`}\n                            onClick={() => handleClick(el)}\n                        >\n                            <p className={`${selectedCategory === el ? 'text-white' : ''}`}>\n                                \n                                {\n                                    window.innerWidth > 780 ? (\n\n                                        el\n                                    ): (\n                                        truncateString(el, 40)\n                                    )\n                                }\n                            </p>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Categories","import Productivity from './Productivity';\nimport Header from './Header';\nimport Categories from './Categories';\n\n\nconst Chatbots = () => {\n\n  return (\n    <div>\n\n      <Header\n        heading={\"Chatbots\"}\n        desc={\"Which teachers assistance would you like?\"}\n      />\n      <Categories />\n      <Productivity />\n\n    </div>\n  );\n};\n\nexport default Chatbots;","import axios from 'axios';\nimport React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n    const [data, setData] = useState({language: 'English'})\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            let res = await api.post(`/chatbot/lessonplanner`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='md:mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"topic\" className='font-medium'>\n                        Topic\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='topic'\n                        placeholder='Type here'\n                        name='topic'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\n                        Grade Level\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='gradeLevel'\n                        name='gradeLevel'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"lessonDuration\" className='font-medium'>\n                        Lesson Duration\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='lessonDuration'\n                        name='lessonDuration'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"keyLearning\" className='font-medium'>\n                        Key Learning Intention\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='keyLearning'\n                        name='keyLearning'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React from 'react'\n\nconst Header = ({ heading, desc, name, image }) => {\n    return (\n        <div className='pr-4'>\n            <div className='flex gap-2 items-end'>\n                <img src={image} alt=\"lesson planner\" className=' w-20' />\n                <h5 className=' font-bold text-lg'>{name}</h5>\n            </div>\n            <h1 className=' capitalize text-2xl font-semibold text-secondary'>\n                {heading}\n            </h1>\n            {\n                desc && (\n                    <p>\n                        {desc}\n                    </p>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Header","import { useContext, useState } from \"react\"\r\nimport GoogleLogin from \"react-google-login\"\r\nimport { UsageContext } from \"../../../context/UsageContext\"\r\n\r\n// LocalHost\r\n// const clientId = '701706349964-qs7l3rc6td3anqm53l8r04ib83aaqdh7.apps.googleusercontent.com'\r\n\r\n//production\r\nconst clientId = '700989349221-o958kd0tivmmrtuqd9v1fl51t17jpaa5.apps.googleusercontent.com'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [login, setLogin] = useState(false)\r\n    const { usage } = useContext(UsageContext);\r\n\r\n    const onSuccess = (res) => {\r\n        console.log('Login Sucess!: ', res);\r\n        setLogin(true)\r\n    }\r\n\r\n    const onFailure = (res) => {\r\n        console.log('Login Failed!: ', res);\r\n    }\r\n\r\n    return (\r\n        <div className={`absolute ${login ? \"-right-44\" : \"right-10\"} ${usage?.plan !== 'Professional' ? \"-right-60\": \"\"} opacity-0  top-2 bg-red-400 w-12 overflow-hidden`}>\r\n\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy=\"single_host_origin\"\r\n                isSignedIn={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport Login from \"./GoogleButtons/Login\";\r\n// import Logout from \"./GoogleButtons/Logout\";\r\nimport { gapi } from \"gapi-script\";\r\n\r\n\r\nimport doc from \"../../images/Icons/doc.png\";\r\nimport docs from \"../../images/Icons/google_doc.png\";\r\nimport excel from \"../../images/Icons/excel.png\";\r\nimport pdf from \"../../images/Icons/pdf.png\";\r\nimport { UsageContext } from \"../../context/UsageContext\";\r\n\r\n\r\n// LocalHost\r\n// const CLIENT_ID = '701706349964-qs7l3rc6td3anqm53l8r04ib83aaqdh7.apps.googleusercontent.com'\r\n// const API_KEY = \"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\"\r\n// const SCOPES = \"https://www.googleapis.com/auth/drive\";\r\n\r\n\r\n// Production\r\nconst CLIENT_ID = '700989349221-o958kd0tivmmrtuqd9v1fl51t17jpaa5.apps.googleusercontent.com'\r\nconst API_KEY = \"AIzaSyDFKgXAsTphgknMumDBBoWJ5jiHOYKv8Uk\"\r\nconst SCOPES = \"https://www.googleapis.com/auth/drive\";\r\n\r\nconst ExportButtons = ({ componentToPrint, answer }) => {\r\n\r\n  const { usage } = useContext(UsageContext);\r\n\r\n  const generateDocx = () => {\r\n    let documentFileContent = \"Title: Lisa The General Lesson Planner\\n\\n\";\r\n    for (let i = 0; i < answer.length; i++) {\r\n      if (i == 0) {\r\n        documentFileContent += answer[i][\"answer\"] + \"\\n\\n\";\r\n        continue;\r\n      }\r\n\r\n      documentFileContent += \"Question: \" + answer[i][\"question\"] + \"\\n\";\r\n      documentFileContent += \"Answer: \" + answer[i][\"answer\"] + \"\\n\\n\";\r\n    }\r\n\r\n    documentFileContent = documentFileContent.replace(/<br\\s*\\/?>/g, \"\\n\\n\");\r\n\r\n    var url =\r\n      \"data:application/vnd.ms-word;charset=utf-8,\" +\r\n      encodeURIComponent(documentFileContent);\r\n    const filename = \"Lisa-The-General_Lesson-History.doc\";\r\n    var downloadLink = document.createElement(\"a\");\r\n\r\n    downloadLink.href = url;\r\n\r\n    downloadLink.download = filename;\r\n    downloadLink.click();\r\n  };\r\n\r\n  const handleToXLSX = () => {\r\n    const table = document.createElement(\"table\");\r\n    const thead = document.createElement(\"thead\");\r\n    const trH = document.createElement(\"tr\");\r\n\r\n    const thQ = document.createElement(\"th\");\r\n    thQ.innerText = \"Questions\";\r\n\r\n    const thA = document.createElement(\"th\");\r\n    thA.innerText = \"Answer\";\r\n\r\n    trH.append(thQ);\r\n    trH.append(thA);\r\n\r\n    thead.append(trH);\r\n\r\n    table.append(thead);\r\n\r\n    const tbody = document.createElement(\"tbody\");\r\n\r\n    for (let i = 0; i < answer.length; i++) {\r\n      const tr = document.createElement(\"tr\");\r\n      if (i == 0) {\r\n        tr.append(document.createElement(\"td\"));\r\n        const tdAns = document.createElement(\"td\");\r\n        tdAns.innerText = answer[i][\"answer\"];\r\n        tr.append(tdAns);\r\n        tbody.append(tr);\r\n        continue;\r\n      }\r\n\r\n      const tdQuestion = document.createElement(\"td\");\r\n      tdQuestion.innerText = answer[i][\"question\"];\r\n\r\n      const tdAnswer = document.createElement(\"td\");\r\n      tdAnswer.innerText = answer[i][\"answer\"];\r\n\r\n      tr.append(tdQuestion);\r\n      tr.append(tdAnswer);\r\n\r\n      tbody.append(tr);\r\n    }\r\n\r\n    table.append(tbody);\r\n\r\n    // Extract Data (create a workbook object from the table)\r\n    var workbook = XLSX.utils.table_to_book(table);\r\n\r\n    // Process Data (add a new row)\r\n    var ws = workbook.Sheets[\"Sheet1\"];\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"Created \" + new Date().toISOString()]], {\r\n      origin: -1,\r\n    });\r\n\r\n    // Package and Release Data (`writeFile` tries to write and save an XLSB file)\r\n    XLSX.writeFile(workbook, \"Report.xlsb\");\r\n  };\r\n\r\n  const handleToPrint = useReactToPrint({\r\n    content: () => componentToPrint.current,\r\n    documentTitle: \"JLegacy-AI\",\r\n    onAfterPrint: () => alert(\"🖨️ Printing Success 🖨️\"),\r\n    pageStyle: `@media print {\r\n            * { overflow: visible !important; } \r\n            @page {\r\n            size: 210mm 297mm;\r\n            margin: 10mm 5mm 10mm 5mm;\r\n            }\r\n        }`,\r\n  });\r\n\r\n  const handleGoogleDocClick = () => {\r\n    if (gapi.auth.getToken()) {\r\n      handleGoogleDoc()\r\n    } else {\r\n      alert('You are not loggedin');\r\n    }\r\n  }\r\n\r\n  const handleGoogleDoc = () => {\r\n\r\n    let tag = 'Test';\r\n    let fileName = tag + ' ' + getDateString() + \" \" + getTimeString();\r\n    let accessToken = gapi.auth.getToken().access_token\r\n\r\n\r\n    let documentFileContent = \"Title: Lisa The General Lesson Planner\\n\\n\";\r\n    for (let i = 0; i < answer.length; i++) {\r\n      if (i == 0) {\r\n        documentFileContent += answer[i][\"answer\"] + \"\\n\\n\";\r\n        continue;\r\n      }\r\n\r\n      documentFileContent += \"Question: \" + answer[i][\"question\"] + \"\\n\";\r\n      documentFileContent += \"Answer: \" + answer[i][\"answer\"] + \"\\n\\n\";\r\n    }\r\n\r\n    documentFileContent = documentFileContent.replace(/<br\\s*\\/?>/g, \"\\n\\n\");\r\n\r\n\r\n\r\n\r\n    fetch(\"https://docs.googleapis.com/v1/documents?title=\" + fileName, {\r\n      method: 'POST',\r\n      headers: new Headers({ 'Authorization': \"Bearer \" + accessToken }),\r\n\r\n    })\r\n      .then((res) => res.json())\r\n      .then((val) => {\r\n        fetch(`https://docs.googleapis.com/v1/documents/${val.documentId}:batchUpdate`, {\r\n          method: 'POST',\r\n          headers: new Headers({\r\n            'Authorization': 'Bearer ' + accessToken,\r\n            'Content-Type': 'application/json'\r\n          }),\r\n          body: JSON.stringify({\r\n            requests: [\r\n              {\r\n                insertText: {\r\n                  location: {\r\n                    index: 1, // Index where you want to insert the text (1 for beginning)\r\n                  },\r\n                  text: documentFileContent,\r\n                },\r\n              },\r\n            ],\r\n          }),\r\n        })\r\n          .then((updateResponse) => {\r\n            if (updateResponse.ok) {\r\n              console.log('Text inserted successfully.');\r\n              console.log(updateResponse);\r\n              // window.open(updateResponse.url.replace(\":batchUpdate\"))\r\n            } else {\r\n              console.error('Error inserting text:', updateResponse.statusText);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error updating the document:', error);\r\n          });\r\n        console.log('Value: ', val);\r\n        console.log('Value: ', val.documentId);\r\n        window.open('https://docs.google.com/document/d/' + val.documentId + \"/edit\")\r\n        // window.open('https://docs.google.com/document/d/' + val.documentId + \"/edit\", \"_blank\")\r\n      })\r\n\r\n  };\r\n\r\n\r\n  // helper Functions\r\n  const zerofill = (i) => { return (i < 10 ? \"0\" : '') + i; }\r\n  const getDateString = () => {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = zerofill(date.getMonth() + 1);\r\n    const day = zerofill(date.getDate());\r\n    return year + '-' + month + '-' + day\r\n  }\r\n  const getTimeString = () => {\r\n    const date = new Date();\r\n    return date.toLocaleTimeString();\r\n  }\r\n\r\n  useEffect(() => {\r\n    function start() {\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        scope: SCOPES\r\n      })\r\n    };\r\n\r\n    gapi.load(\"client:auth2\", start)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"flex justify-end gap-5 items-center\">\r\n      <div>\r\n        {/* <Logout /> */}\r\n      </div>\r\n      <div className=\" flex gap-5 relative overflow-hidden\">\r\n        {[\r\n          {\r\n            image: excel,\r\n            fn: handleToXLSX,\r\n            text: 'Export Excel'\r\n          },\r\n          {\r\n            image: pdf,\r\n            fn: handleToPrint,\r\n            text: 'Export PDF'\r\n          },\r\n          {\r\n            image: doc,\r\n            fn: generateDocx,\r\n            text: 'Export DOCS'\r\n          },\r\n          {\r\n            image: docs,\r\n            fn: handleGoogleDocClick,\r\n            text: 'Export Google DOC'\r\n          }\r\n        ].map((el, i) => {\r\n          return (\r\n            <div className=\"flex flex-col gap-1 justify-center items-center\">\r\n              {\r\n                usage?.plan === 'Professional' ? (\r\n                  <>\r\n                    <img\r\n                      key={i}\r\n                      src={el.image}\r\n                      alt=\"icon\"\r\n                      className=\"w-16  cursor-pointer\"\r\n                      onClick={() => el.fn()}\r\n                    />\r\n                    <div>{el.text}</div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <img\r\n                      key={i}\r\n                      src={el.image}\r\n                      alt=\"icon\"\r\n                      className=\"w-16 cursor-not-allowed\"\r\n                    />\r\n                    <div>{el.text}</div>\r\n                  </>\r\n                )\r\n              }\r\n            </div>\r\n          );\r\n        })}\r\n        <Login />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportButtons;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction Answer({ answer }) {\r\n\r\n  const slideDown = () => {\r\n    console.log('Here I am to scroll');\r\n    let content = document.getElementById('chat_content');\r\n    console.log('content: ', content);\r\n\r\n    // Get the last child element\r\n    let lastChild = content.lastElementChild;\r\n\r\n    // Calculate the height to subtract (last child's height)\r\n    let subtractHeight = lastChild ? lastChild.clientHeight : 0;\r\n\r\n    // Scroll down, but subtract the height of the last child\r\n    content.scrollTop = content.scrollHeight - subtractHeight;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    slideDown();\r\n  }, [answer])\r\n\r\n  return (\r\n    <div>\r\n      <div id='chat_content' className='overflow-y-scroll h-[70vh] pr-4 pt-4'>\r\n        {\r\n          answer?.map((el, i) => {\r\n            function wrapLinksWithAnchorTags(text) {\r\n              // Regular expression to match URLs\r\n              var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n\r\n              // Replace URLs with anchor tags\r\n              var newText = text?.replace(urlRegex, function (url) {\r\n                return `<a href=\"${url}\" target=\"_blank\" style=\"color: blue;\">${url}</a>`;\r\n              });\r\n\r\n              return newText;\r\n            }\r\n\r\n            let newText = wrapLinksWithAnchorTags(el?.answer)\r\n\r\n            return (\r\n              <div className=\"chat_content_item prose prose-xl\" style={{ width: '100%' }}>\r\n                {\r\n                  el?.question && (\r\n                    <h4 className='mt-20 mb-3 text-xl font-bold'>\r\n                      {el?.question}\r\n                    </h4>\r\n                  )\r\n                }\r\n                <div className=\" text-sm\" dangerouslySetInnerHTML={{ __html: newText }} />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Answer;","import React from 'react'\n\nconst Loading = ({ message }) => {\n    return (\n        <div className='flex justify-center items-center text-5xl text-white absolute left-0 right-0 bottom-0 top-0'>\n            <div className='absolute left-0 right-0 bottom-0 top-0 opacity-20 bg-gray-700 -z-10'>\n\n            </div>\n\n            {/* {message ? message : \"Loading....\"} */}\n            <div aria-label=\"Loading...\" role=\"status\">\n                <svg class=\"h-20 w-20 animate-spin\" viewBox=\"3 3 18 18\">\n                    <path\n                        class=\"fill-gray-200\"\n                        d=\"M12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5ZM3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z\"></path>\n                    <path\n                        class=\"fill-gray-800\"\n                        d=\"M16.9497 7.05015C14.2161 4.31648 9.78392 4.31648 7.05025 7.05015C6.65973 7.44067 6.02656 7.44067 5.63604 7.05015C5.24551 6.65962 5.24551 6.02646 5.63604 5.63593C9.15076 2.12121 14.8492 2.12121 18.364 5.63593C18.7545 6.02646 18.7545 6.65962 18.364 7.05015C17.9734 7.44067 17.3403 7.44067 16.9497 7.05015Z\"></path>\n                </svg>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading","import React from 'react'\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { UsageContext } from '../../context/UsageContext';\r\nimport api from '../../util/api';\r\nimport { toast } from 'react-toastify';\r\nimport { ChatbotContext } from '../../context/ChatbotContext';\r\n\r\nconst ShortForm = ({ url, setLoading, setAnswer, chatID }) => {\r\n\r\n    const [prompt, setPrompt] = useState('');\r\n\r\n\r\n    const { fetchUsage } = useContext(UsageContext);\r\n    const { language, videoUrl } = useContext(ChatbotContext);\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoading(true);\r\n\r\n        let data = {}\r\n        if (url === '/mathquiz/gen') {\r\n            data = {\r\n                body: {\r\n                    mathproblem: prompt,\r\n                    type: '',\r\n                    language: language\r\n                },\r\n                chat_id: chatID\r\n            }\r\n        }\r\n        else if (url === '/video/chat') {\r\n            data = {\r\n                body: {\r\n                    url: videoUrl,\r\n                    videoChatPrompt: prompt,\r\n                    language: language\r\n                },\r\n                chat_id: chatID\r\n            }\r\n        }\r\n        else {\r\n            data = {\r\n                body: {\r\n                    prompt,\r\n                    language\r\n                },\r\n                chat_id: chatID\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            let res = await api.post(`/chatbot${url}`, data);\r\n\r\n            if (res.statusText === 'OK') {\r\n\r\n                console.log('Here is the answer: ', res.data.answer);\r\n\r\n                setAnswer((prev) => ([...prev, { question: prompt, answer: res.data.answer }]))\r\n                setPrompt('')\r\n                setLoading(false)\r\n                fetchUsage();\r\n            }\r\n        } catch (error) {\r\n            if (error?.response?.status === 429) {\r\n                toast(error?.response?.data?.error)\r\n            }\r\n            console.log('Error: ', error);\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className='flex gap-4 mt-10'\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                className='w-full px-3 h-10'\r\n                name='prompt'\r\n                placeholder='Write your prompt...'\r\n                value={prompt}\r\n                onChange={(e) => setPrompt(e.target.value)} />\r\n            <button\r\n                className='px-3 py-1 rounded-md border-2 text-white bg-[#ed7742]'\r\n                disabled={prompt ? false : true}\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ShortForm","import { useEffect, useState } from \"react\";\r\nimport api from \"../../../util/api\";\r\nimport Answer from \"../../Chatbots/Answer\";\r\n\r\nconst Content = ({ chatbotid }) => {\r\n\r\n    // const { chatbotid } = useParams();\r\n    const [chatHistory, setChatHistory] = useState();\r\n\r\n    const getHistory = async () => {\r\n        try {\r\n\r\n            const res = await api.get(`/chat/history/${chatbotid}`)\r\n            console.log(res.data.history);\r\n            setChatHistory(res.data.history)\r\n\r\n        } catch (error) {\r\n            console.log('Error while fetching ids: \\n', error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('\\n\\n\\nChatID: \\n\\n', chatbotid);\r\n        getHistory();\r\n    }, [chatbotid])\r\n\r\n    return (\r\n        <>\r\n            {/* <h1>Content: {chatbotid}</h1> */}\r\n            <div style={{\r\n                overflowY: 'scroll',\r\n                scrollbarWidth: 'thin', /* For Firefox */\r\n                WebkitScrollbarWidth: 'thin', /* For Firefox */\r\n                scrollbarColor: 'rgb(23, 5, 20) #a5aeae', /* For Firefox */\r\n                WebkitScrollbarColor: 'rgb(23, 5, 20) #a5aeae', /* For Firefox */\r\n            }}>\r\n                {\r\n                    chatHistory && <Answer answer={chatHistory.content} />\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Content","// import { Link, Route, Routes, useLocation, useParams } from \"react-router-dom\";\r\nimport api from \"../../../util/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Content from \"./Content\";\r\n\r\n\r\nimport { MdOutlineWorkHistory } from 'react-icons/md'\r\n\r\nconst History = ({ chatbot }) => {\r\n\r\n    // const { chatbot } = useParams();\r\n    const [chatIDs, setChatIDs] = useState();\r\n    const [chatID, setChatID] = useState('')\r\n\r\n    const getChatIDs = async () => {\r\n        try {\r\n\r\n            const res = await api.post('/chat/get-chat-ids/', { chat_name: chatbot })\r\n            console.log(res.data);\r\n            setChatIDs(res.data.history)\r\n\r\n        } catch (error) {\r\n            console.log('Error while fetching ids: \\n', error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getChatIDs()\r\n    }, [])\r\n\r\n    if (!chatIDs) {\r\n        return <div>Loading....</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex gap-5\">\r\n            <div className=\"flex-[1.5] flex flex-col gap-5 pl-3 max-h-[100vh] overflow-y-scroll\" style={{\r\n                overflowY: 'scroll',\r\n                scrollbarWidth: 'none', /* For Firefox */\r\n                WebkitOverflowScrolling: 'touch', /* For iOS Safari */\r\n                MsOverflowStyle: '-ms-autohiding-scrollbar' /* For IE/Edge */\r\n            }}>\r\n                {\r\n                    (chatIDs.length > 0) ? (\r\n                        chatIDs.map((e) => (\r\n                            <div onClick={() => setChatID(e.id)} className=\"flex flex-row gap-3 cursor-pointer border-b border-blue-500\">\r\n                                <MdOutlineWorkHistory />\r\n                                <p className=\"whitespace-nowrap overflow-hidden text-ellipsis\">{e.title}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <h3 className=\" text-xl font-bold\">No History</h3>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"flex-[5] max-h-[100vh]\">\r\n                <Content chatbotid={chatID} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","import React from 'react'\r\n\r\nconst ExamplePrompts = ({ examplePrompts }) => {\r\n    return (\r\n        <div className='flex-[0.75]'>\r\n\r\n            <h2 className=' text-2xl font-bold mb-5'>\r\n                Follow Up Prompts\r\n            </h2>\r\n\r\n            <div className='flex items-center'>\r\n                <div className=' bg-gray-300 px-8 py-5'>\r\n                    {\r\n                        examplePrompts?.map((item, i) => (\r\n                            <div className=' mb-1'>\r\n                                <h4 className=' font-bold'>Example {i + 1}</h4>\r\n                                <p className='text-xs'>Teacher: {item}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExamplePrompts","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport Answer from './Answer';\r\n\r\nimport Loading from './Loading';\r\nimport ShortForm from './ShortForm';\r\nimport History from '../Dashboard/history/History';\r\nimport ExamplePrompts from './ExamplePrompts';\r\nimport { UsageContext } from '../../context/UsageContext';\r\n\r\n\r\nconst AnswerAndHistory = ({\r\n    answer, setAnswer,\r\n    componentRef,\r\n    loading, setLoading,\r\n    chatID, url,\r\n    chatbot, dontFollow, examplePrompts, notPrompts\r\n}) => {\r\n\r\n    const [showHistory, setShowHistory] = useState(false);\r\n    const { usage } = useContext(UsageContext)\r\n    \r\n    return (\r\n        <div className='max-h-[100vh] pb-5 flex flex-1 gap-3'>\r\n            <div className={`flex-[2] ${answer.length > 0 ? 'border-r border-black' : ''}`}>\r\n                <div className=' border-b-2 flex gap-3'>\r\n                    <button className={`${!showHistory ? 'bg-slate-300' : ''} px-4 py-2`} onClick={() => setShowHistory(false)}>Output</button>\r\n                    {\r\n                        usage?.plan === 'Professional' && (\r\n                            <button className={`${showHistory ? 'bg-slate-300' : ''} px-4 py-2`} onClick={() => setShowHistory(true)}>History</button>\r\n                        )\r\n                    }\r\n                </div>\r\n                {\r\n                    !showHistory ? (\r\n                        <>\r\n                            {\r\n                                (answer.length > 0) ? (\r\n                                    <div>\r\n                                        <div className='relative' ref={componentRef}>\r\n\r\n                                            <Answer answer={answer} />\r\n                                            {loading && <Loading />}\r\n\r\n                                        </div>\r\n\r\n                                        {\r\n                                            !dontFollow &&\r\n                                            <ShortForm\r\n                                                url={url}\r\n                                                setLoading={setLoading}\r\n                                                setAnswer={setAnswer}\r\n                                                chatID={chatID}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                                    : (\r\n                                        <div className=' flex justify-center items-center w-full h-full relative'>\r\n                                            <p>Try variaty of inputs and input lengths to get the best results</p>\r\n                                            {\r\n                                                loading && <Loading />\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </>\r\n                    ) : (\r\n                        <div>\r\n                            <History chatbot={chatbot} />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            {\r\n                !notPrompts && (\r\n                    ((answer.length > 0) && (!showHistory)) && (window.innerWidth > 786) && <ExamplePrompts examplePrompts={examplePrompts} />\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswerAndHistory","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\n\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\n\n\n\nimport _1_LessonPlanning from '../../../images/bots/1.Lesson Planning - Lisa.png'\nimport AnswerAndHistory from '../AnswerAndHistory';\nimport Categories from '../../Dashboard/components/Categories';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst LessonPlanner = () => {\n\n    const componentRef = useRef(null)\n\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n    const { setSelectedCategory } = useContext(ChatbotContext)\n    useEffect(() => {\n        setSelectedCategory('Lesson Planning')\n    }, [])\n    \n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='md:border-r border-secondary w-full md:max-w-[350px]'>\n                    <Header\n                        name={'Lisa'}\n                        heading={'General Lesson Planner'}\n                        desc={'Let me provide you with assistance for your lesson planning needs.'}\n                        image={_1_LessonPlanning}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    url={'/lessonplanner'}\n                    chatbot=\"Lesson Planning\"\n                    examplePrompts={[\n                        `Thanks for the lesson plan! Can you suggest some additional hands-on activities to help students better understand?`,\n                        `I appreciate the lesson plan. Can you recommend other videos or multimedia resources that I can use to supplement the lesson?`,\n                        `Thank you for the lesson plan. I'd like to include a short assessment at the end of the lesson to check my students' understanding of the water cycle. Can you provide some sample questions or ideas for the assessment?`\n                    ]}\n                />\n            </div>\n\n            <ExportButtons componentToPrint={componentRef} answer={answer} />\n\n        </div>\n    )\n}\n\nexport default LessonPlanner","import React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n    const [data, setData] = useState({ language: 'English' })\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            let res = await api.post(`/chatbot/quiz`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n\n            setLoading(false)\n\n        }\n\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\n                        Grade Level\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='grade'\n                        name='grade'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"topic\" className='font-medium'>\n                        Quiz Topic\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='topic'\n                        placeholder='Type here'\n                        name='topic'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"summary\" className='font-medium'>\n                        Short Summary Learning Objectives\n                    </label>\n                    <textarea\n                        id='summary'\n                        name='summary'\n                        onChange={handleChange}\n                        className='px-2 h-28 rounded-md border  bg-white outline-none'\n                    ></textarea>\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"type\" className='font-medium'>\n                        Quiz Type (Eg: multiple choice, true or false etc)\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='type'\n                        name='type'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"questionnumber\" className='font-medium'>\n                        Number of Questions\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='questionnumber'\n                        name='questionnumber'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\n\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\n\nimport _2_Quiz from '../../../images/bots/2.Quiz - Qasim.png'\nimport AnswerAndHistory from '../AnswerAndHistory';\n\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport Categories from '../../Dashboard/components/Categories';\n\n\nconst Quiz = () => {\n\n    const componentRef = useRef(null);\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n\n    const { setSelectedCategory } = useContext(ChatbotContext)\n    useEffect(() => {\n        setSelectedCategory('Student Engagement & Activity Ideas')\n    }, [])\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Qasim'}\n                        image={_2_Quiz}\n                        heading={'Quiz Generator'}\n                        desc={'Allow me to offer assistance with your quiz creation tasks.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/quiz'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"General Quiz\"\n                    examplePrompts={[\n                        'Can you provide me with the correct answers to the quiz?',\n                        'Can you increase the difficulty level of the quiz?',\n                        'I want to track individual student performance on this quiz?',\n                        'Are there any resources or study materials available to help students prepare for this quiz'\n                    ]}\n                    dontFollow={true}\n                />\n            </div>\n\n            <ExportButtons componentToPrint={componentRef} answer={answer} />\n\n        </div>\n    )\n}\n\nexport default Quiz","import React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n\n    const [data, setData] = useState({language: \"English\"})\n    const [selectedFile, setSelectedFile] = useState(null);\n    \n    const { fetchUsage, usage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n    const handleFileChange = (e) => {\n        console.log('File selected: ', e.target.files[0]);\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        console.log(data);\n        setLoading(true)\n\n        const formData = new FormData();\n        console.log('File Selected: ', selectedFile);\n        formData.append('file', selectedFile);\n        // console.log(data);\n        formData.append('body', JSON.stringify(data));\n        // console.log(formData.get('body'));\n\n        // Override the Content-Type for this request\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data', // Set the desired Content-Type\n            },\n        };\n\n\n        try {\n            for (var pair of formData.entries()) {\n                console.log(pair[0]);\n                console.log(pair[1]);\n            }\n            console.log(formData);\n            let res = await api.post(`/chatbot/gradeEssay`, formData, config)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    const generateRubric = async () => {\n\n        let _body = {\n            body: {\n                essay_question: data.question,\n                grade: data.grade\n            }\n        }\n\n        try {\n            let res = await api.post(`/gradeEssay/rubric`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from ChatFrom/Rubric: ', res);\n                console.log('Here is the Rubric: ', res.data.rubric);\n                // setChatID(res.data.chat_id)\n                // setAnswer([{ answer: res.data.answer }])\n            }\n        } catch (error) {\n            console.log('Erro While Rubric Generation');\n        }\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\n                        Grade Level\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='grade'\n                        name='grade'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"question\" className='font-medium'>\n                        Question\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='question'\n                        placeholder='Type here'\n                        name='question'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n\n                    <label\n                        htmlFor=\"essayContent\"\n                        className=\"block mb-2 text-sm font-medium text-gray-900\">\n                        Essay Content\n                    </label>\n                    <textarea\n                        id=\"essayContent\"\n                        rows=\"4\"\n                        name='essayContent'\n                        className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"Add essay content here or attach a file document\"\n                        onChange={handleChange}\n                    >\n                    </textarea>\n                    {\n                        (usage?.noOfFilesUploaded !== usage?.noOfFilesUploadedLimit) ? (\n                            <input class=\"block mt-2 mb-5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\" id=\"file_input\" type=\"file\"\n                                accept='.pdf, .doc, .docx'\n                                onChange={handleFileChange}\n                            />\n                        ) : (\n                            <input class=\"block mt-2 mb-5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\" id=\"file_input\" type=\"file\"\n                                accept='.pdf'\n                                disabled\n                            />\n                        )\n                    }\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label\n                        htmlFor=\"essayContent\"\n                        className=\"block mb-2 text-sm font-medium text-gray-900\">\n                        Rubric\n                    </label>\n                    <textarea\n                        id=\"essayContent\"\n                        rows=\"4\"\n                        name='rubric'\n                        className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"Add your own rubric for assessment here or check the box to use the default one\"\n                        onChange={handleChange}\n                    >\n                    </textarea>\n\n                    <label htmlFor=\"defaultRubric\" className='flex gap-2 cursor-pointer'>\n                        <input type=\"checkbox\" id='defaultRubric' onChange={(e) => {\n                            if (e.target.checked) {\n                                setData({ ...data, 'rubric': 'default' })\n                                // generateRubric();\n                            }\n                        }} />\n                        Use default\n                    </label>\n\n                </div>\n\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"rubric\" className='font-medium'>\n                        Custom Rubric\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='rubric'\n                        name='rubric'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n            {/* <button className=' bg-blue-300 max-w-max px-2 py-2' onClick={generateRubric}>Generate Rubric</button> */}\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\n\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\n\nimport _3_AutomatedEssay from '../../../images/bots/3.Automated Essay Scoring and Feedback - Elsa.png'\nimport AnswerAndHistory from '../AnswerAndHistory';\n\nimport { useEffect } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport { useContext } from 'react';\nimport Categories from '../../Dashboard/components/Categories';\n\n\nconst Essay = () => {\n\n    const componentRef = useRef(null)\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n\n    const { setSelectedCategory } = useContext(ChatbotContext)\n    useEffect(() => {\n        setSelectedCategory('Assessment & Progress Monitoring')\n    }, [])\n\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Elsa'}\n                        image={_3_AutomatedEssay}\n                        heading={'Essay Grading'}\n                        desc={'Let me provide you with assistance for your essay grading tasks.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/gradeEssay'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"Essay Grading\"\n                    dontFollow={true}\n                    notPrompts={true}\n                />\n            </div>\n\n            {/* <ExportButtons componentToPrint={componentRef} answer={answer} /> */}\n            <ExportButtons componentToPrint={componentRef} answer={answer} />\n\n        </div>\n    )\n}\n\nexport default Essay","import React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n    const [data, setData] = useState({language: \"English\"})\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            let res = await api.post(`/chatbot/lessonComp/questions`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"writeUp\" className='font-medium'>\n                        Comprehension Text\n                    </label>\n                    <textarea\n                        id='writeUp'\n                        name='writeup'\n                        rows=\"4\"\n                        className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"Add comprehension text here\"\n                        onChange={handleChange}\n                    >\n                    </textarea>\n                    {/* <input\n                        type=\"text\"\n                        id='writeUp'\n                        name='writeup'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    /> */}\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"question\" className='font-medium'>\n                        Question Type (Eg 1. multiple choice 2. true or false etc)\n\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='question'\n                        placeholder='Type here'\n                        name='qtype'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"qnumber\" className='font-medium'>\n                        Number of Questions\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='qnumber'\n                        name='qnumber'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\nimport AnswerAndHistory from '../AnswerAndHistory';\n\n\nimport _4_ComprehensionLesson from '../../../images/bots/4.Comprehension Lesson Generator - Cara.png'\n\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport Categories from '../../Dashboard/components/Categories';\nimport { UsageContext } from '../../../context/UsageContext';\nimport api from '../../../util/api';\nimport { toast } from 'react-toastify';\n\n\nconst LessonComprehension = () => {\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n    const componentRef = useRef(null)\n\n    const { language, setSelectedCategory } = useContext(ChatbotContext)\n    const { fetchUsage } = useContext(UsageContext);\n\n    useEffect(() => {\n        setSelectedCategory('Lesson Planning')\n    }, [])\n\n\n    const getAnswers = async () => {\n\n        setLoading(true)\n        let _body = {\n            body: {\n                language: language || 'English'\n            },\n            chat_id: chatID\n        }\n\n        try {\n\n            let res = await api.post(`/chatbot/lessonComp/answer`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setAnswer((prev) => [...prev, { question: \"Answers\", answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage()\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Cara'}\n                        image={_4_ComprehensionLesson}\n                        heading={'Lesson Comprehension'}\n                        desc={'Allow me to offer assistance with generating comprehension lessons tailored to your needs.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/lessonComp/chat'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"Lesson Comprehension\"\n                    examplePrompts={[\n                        \"Hi, I'm preparing a lesson for my 3rd-grade math class on multiplication. Can you suggest some engaging activities and resources to help my students practice their multiplication skills?\",\n                        \"Hello, I'm teaching a middle school history class, and we're covering the American Civil War. Can you recommend some interactive resources and activities to help my students understand the key events and figures of this period?\",\n                        \"Hey, I'm planning a lesson for my 7th-grade geography class on climate zones. Can you provide me with some resources and activities that will help my students learn about the different climate zones around the world?\",\n                        \"Hi there, I'm working on a lesson for my high school chemistry class about chemical reactions. Can you help me find some safe and engaging lab activities and resources to demonstrate various types of chemical reactions?\",\n                        \"Hello, I'm teaching an elementary school art class, and I'd like to introduce my students to famous artists and their works. Can you recommend some age-appropriate resources and activities that will help my students explore and appreciate different art styles and artists?\"\n                    ]}\n                />\n            </div>\n\n            <div className=' flex gap-4 justify-end items-center'>\n                {\n                    answer?.length > 0 && (\n                        <div>\n                            <button onClick={getAnswers} className='px-6 py-3 rounded-md border-2 text-white bg-[#ed7742]'>\n                                Reveal Answers\n                            </button>\n                        </div>\n                    )\n                }\n                <ExportButtons componentToPrint={componentRef} answer={answer} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default LessonComprehension","import React, { useContext, useState } from 'react'\nimport api from '../../../util/api';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n    const [data, setData] = useState({language: \"English\"})\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            console.log('data: ', data);\n            let res = await api.post(`/chatbot/mathquiz/gen`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage()\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"mathproblem\" className='font-medium'>\n                        Math Problem\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='mathproblem'\n                        name='mathproblem'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"qtype\" className='font-medium'>\n                        Question Type (Eg: multiple choice, true or false etc)\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='qtype'\n                        placeholder='Type here'\n                        name='type'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"numberofquestions\" className='font-medium'>\n                        Number of Questions\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='numberofquestions'\n                        name='numberofquestions'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\n                        Grade Level\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='gradeLevel'\n                        name='gradeLevel'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\n\n\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\n\n\nimport _5_MathsQuiz from '../../../images/bots/5.Maths Quiz - Matthew.png'\nimport AnswerAndHistory from '../AnswerAndHistory';\n\nimport { useEffect } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport { useContext } from 'react';\nimport Categories from '../../Dashboard/components/Categories';\nimport { toast } from 'react-toastify';\nimport { UsageContext } from '../../../context/UsageContext';\nimport api from '../../../util/api';\n\n\nconst MathQuiz = () => {\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n    const componentRef = useRef(null);\n\n\n    const { language, setSelectedCategory } = useContext(ChatbotContext)\n    const { fetchUsage } = useContext(UsageContext);\n\n    useEffect(() => {\n        setSelectedCategory('Student Engagement & Activity Ideas')\n    }, [])\n\n    const getAnswers = async () => {\n\n        setLoading(true)\n        let _body = {\n            body: {\n                language: language || 'English'\n            },\n            chat_id: chatID\n        }\n\n        try {\n\n            let res = await api.post(`/chatbot/mathquiz/answer`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setAnswer((prev) => [...prev, { question: \"Answers\", answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage()\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Matthew'}\n                        image={_5_MathsQuiz}\n                        heading={'Maths Quiz'}\n                        desc={'Allow me to assist you in creating math quizzes that meet your requirements.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/mathquiz/gen'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"Math Quiz Generator\"\n                    examplePrompts={[\n                        \"Can you provide me with the correct answers to the quiz?\",\n                        \"Can you increase the difficulty level of the quiz?\",\n                        \"I want to track individual student performance on this quiz?\",\n                        \"Are there any resources or study materials available to help students prepare for this quiz?\"\n                    ]}\n                />\n            </div>\n\n            <div className=' flex gap-4 justify-end items-center'>\n                {\n                    answer?.length > 0 && (\n                        <div>\n                            <button onClick={getAnswers} className='px-6 py-3 rounded-md border-2 text-white bg-[#ed7742]'>\n                                Reveal Answers\n                            </button>\n                        </div>\n                    )\n                }\n                <ExportButtons componentToPrint={componentRef} answer={answer} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default MathQuiz","import React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n    const [data, setData] = useState({ language: \"English\" })\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            let res = await api.post(`/chatbot/math/lesson`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"topic\" className='font-medium'>\n                        Maths Topic\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='topic'\n                        placeholder='Type here'\n                        name='topic'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\n                        Grade Level\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='gradeLevel'\n                        name='gradeLevel'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"lessonDuration\" className='font-medium'>\n                        Lesson Duration\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='lessonDuration'\n                        name='lessonDuration'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"keyLearning\" className='font-medium'>\n                        Key Learning Intention\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='keyLearning'\n                        name='keyLearning'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\n\n\nimport _6_MathLessonPlanner from '../../../images/bots/6.Math Lesson Planner - Lucy.png'\nimport AnswerAndHistory from '../AnswerAndHistory';\n\nimport { useContext } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport { useEffect } from 'react';\nimport Categories from '../../Dashboard/components/Categories';\n\nconst MathLessonPlanner = () => {\n\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n\n    const componentRef = useRef(null);\n\n\n    const { setSelectedCategory } = useContext(ChatbotContext)\n    useEffect(() => {\n        setSelectedCategory('Lesson Planning')\n    }, [])\n\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Lucy'}\n                        image={_6_MathLessonPlanner}\n                        heading={'Math Lesson Planner'}\n                        desc={'Allow me to aid you in designing well-structured math lessons that align with your goals and requirements.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/math/lesson'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"Math Lesson Planner\"\n                    examplePrompts={[\n                        \"Hi, I'm preparing a lesson for my 5th-grade class on fractions. Can you suggest some engaging activities and resources to help my students understand the concept of fractions and their applications?\",\n                        \"Hello, I'm teaching a high school calculus class, and we're covering the concept of limits. Can you recommend some interactive resources and activities to help my students grasp the fundamentals and applications of limits?\",\n                        \"Hey, I'm planning a lesson for my 8th-grade algebra class on quadratic equations. Can you provide me with some resources and activities that will help my students learn how to solve and graph quadratic equations?\",\n                        \"Hi there, I'm working on a lesson for my middle school geometry class about angles. Can you help me find some engaging activities and resources to demonstrate the properties and types of angles?\",\n                        \"Hello, I'm teaching a pre-calculus class, and I'd like to introduce my students to trigonometric functions. Can you recommend some resources and activities that will help my students understand and apply sine, cosine, and tangent functions?\"\n                    ]}\n                />\n            </div>\n\n            <ExportButtons componentToPrint={componentRef} answer={answer} />\n\n\n        </div>\n    )\n}\n\nexport default MathLessonPlanner","import axios from 'axios';\nimport React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID }) => {\n\n    const [data, setData] = useState({ language: 'English' })\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { videoUrl, setVideoURL, setLanguage } = useContext(ChatbotContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            let res = await api.post(`/chatbot/video/summarize`, _body)\n\n            console.log('Response from chatform: ', res);\n            console.log('Here is the answer: ', res.data.answer);\n            setChatID(res.data.chat_id)\n            setAnswer([{ answer: res.data.answer }])\n            setLoading(false)\n            fetchUsage();\n\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            if (error?.response?.status === 504) {\n                toast(\"Gateway Timeout, Try Again\")\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"summary\" className='font-medium'>\n                        Video URL\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='summary'\n                        placeholder='Add Youtube video link here'\n                        name='url'\n                        onChange={(e) => {\n                            handleChange(e);\n                            setVideoURL(e.target.value)\n                        }}\n                        value={videoUrl}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\n                        Grade Level\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='gradeLevel'\n                        name='gradeLevel'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"lessonDuration\" className='font-medium'>\n                        Lesson Duration\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='lessonDuration'\n                        name='lessonDuration'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"keyLearning\" className='font-medium'>\n                        Key Learning Intention\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='keyLearning'\n                        name='keyLearning'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useContext, useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\nimport AnswerAndHistory from '../AnswerAndHistory'\n\n\nimport _7_VideotoNotes from '../../../images/bots/7.Video to notes - Vincent.png'\n\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport { useEffect } from 'react';\nimport Categories from '../../Dashboard/components/Categories';\n\nconst VideoToNotes = () => {\n\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n\n    const componentRef = useRef(null);\n\n\n    const { setSelectedCategory } = useContext(ChatbotContext)\n    useEffect(() => {\n        setSelectedCategory('Digital Learning & Teaching Tools')\n    }, [])\n\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Vincent'}\n                        image={_7_VideotoNotes}\n                        heading={'Video To Notes'}\n                        desc={'Allow me to assist you in summarizing videos effectively for your convenience.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/video/chat'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"Video To Notes\"\n                    examplePrompts={[\n                        \"Can you provide more detail on the main points discussed in the video? I'd like to understand the context better.\",\n                        \"I'm interested in the speaker's perspective on [specific topic from the video]. Could you generate a summary focusing on this aspect?\",\n                        \"The video summary provided a good overview, but I'm curious about any counterarguments or alternative perspectives that were mentioned. Could you expand on those?\",\n                        \"The video seemed to touch on a lot of interesting points. Are there any specific examples or case studies mentioned that I could explore further?\"\n                    ]}\n                />\n            </div>\n\n            <ExportButtons componentToPrint={componentRef} answer={answer} />\n\n        </div>\n    )\n}\n\nexport default VideoToNotes","import React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID, setVidUrl }) => {\n\n    const [data, setData] = useState({ language: \"English\" })\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n        setLoading(true)\n\n        let _body = {\n            body: { ...data, userinput: '' }\n        }\n\n        try {\n            let res = await api.post(`/chatbot/video/quiz`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n\n                if (res.data.answer === 'Invalid YouTube link') {\n                    toast(res.data.answer)\n                }\n                setChatID(res.data.chat_id)\n                setAnswer([{ answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"url\" className='font-medium'>\n                        Video URL\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='url'\n                        placeholder='Add Youtube video link here'\n                        name='url'\n                        onChange={(e) => {\n                            handleChange(e);\n                            setVidUrl(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"num_question\" className='font-medium'>\n                        Number Of Questions\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='num_question'\n                        name='num_question'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"quiz_type\" className='font-medium'>\n                        Quiz Type (Eg: multiple choice, true or false etc)\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='quiz_type'\n                        name='quiz_type'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"keyLearning\" className='font-medium'>\n                        Key Learning Intention\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='keyLearning'\n                        name='keyLearning'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLanguage(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React, { useRef, useState } from 'react'\n\nimport ChatForm from './ChatForm'\n\nimport Header from '../Header'\nimport ExportButtons from '../ExportButtons';\n\nimport _8_VideotoQuizBot from '../../../images/bots/8. Video to Quiz Bot.png'\nimport AnswerAndHistory from '../AnswerAndHistory';\n\nimport { useContext } from 'react';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport { useEffect } from 'react';\nimport Categories from '../../Dashboard/components/Categories';\nimport { UsageContext } from '../../../context/UsageContext';\nimport api from '../../../util/api';\nimport { toast } from 'react-toastify';\n\nconst VideoToQuiz = () => {\n\n    const [answer, setAnswer] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [chatID, setChatID] = useState('')\n    const [vidUrl, setVidUrl] = useState('');\n\n    const componentRef = useRef(null);\n\n    const { language, setSelectedCategory } = useContext(ChatbotContext)\n    const { fetchUsage } = useContext(UsageContext);\n\n    useEffect(() => {\n        setSelectedCategory('Digital Learning & Teaching Tools')\n    }, [])\n\n\n    const getAnswers = async () => {\n\n        setLoading(true)\n        let _body = {\n            body: {\n                language: language || 'English',\n                url: vidUrl\n            },\n            chat_id: chatID\n        }\n\n        try {\n\n            let res = await api.post(`/chatbot/video/answer`, _body)\n\n            if (res.statusText === 'OK') {\n\n                console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', res.data.answer);\n                setAnswer((prev) => [...prev, { question: \"Answers\", answer: res.data.answer }])\n                setLoading(false)\n                fetchUsage()\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n            setLoading(false)\n\n        }\n\n    }\n\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Hunter'}\n                        image={_8_VideotoQuizBot}\n                        heading={'Video To Quiz'}\n                        desc={'Allow me to help you craft interactive quizzes from videos, enhancing engagement and learning experiences effortlessly.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                        setVidUrl={setVidUrl}\n                    />\n\n                </div>\n\n                <AnswerAndHistory\n                    url={'/video/quiz/chat'}\n                    answer={answer}\n                    setAnswer={setAnswer}\n                    componentRef={componentRef}\n                    loading={loading}\n                    setLoading={setLoading}\n                    chatID={chatID}\n                    chatbot=\"Video To Quiz\"\n                    examplePrompts={[\n                        \"The quiz was quite challenging. Could you provide explanations for the answers to help me understand where I went wrong?\",\n                        \"Based on the summary, it seems like the video touched on several complex topics. Could you generate a few more quiz questions to help me test my understanding?\",\n                        \"The quiz questions were thought-provoking! Could you generate a few more questions that focus on the practical applications or real-world implications of the concepts discussed in the video?\",\n                        \"I found the quiz challenging but enjoyable. Can you generate a summary of the correct answers and provide some additional insights or explanations for each question?\"\n                    ]}\n                />\n            </div>\n\n            <div className=' flex gap-4 justify-end items-center'>\n                {\n                    answer?.length > 0 && (\n                        <div>\n                            <button onClick={getAnswers} className='px-6 py-3 rounded-md border-2 text-white bg-[#ed7742]'>\n                                Reveal Answers\n                            </button>\n                        </div>\n                    )\n                }\n                <ExportButtons componentToPrint={componentRef} answer={answer} />\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default VideoToQuiz","import React, { useState } from 'react'\r\nimport api from '../../../util/api';\r\nimport { useContext } from 'react';\r\nimport { UsageContext } from '../../../context/UsageContext'\r\nimport { toast } from 'react-toastify';\r\nimport { ChatbotContext } from '../../../context/ChatbotContext';\r\n\r\nconst ChatForm = ({ setAnswer, setPlagAnswer, setLoading, chatID, setChatID, plag, setPlag, detect, setDetect }) => {\r\n\r\n    const [data, setData] = useState({ language: \"English\" })\r\n\r\n    const [disableDetect, setDisableDetect] = useState(false);\r\n    const [diablePlag, setDisablePlag] = useState(false);\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n\r\n    const { fetchUsage, usage } = useContext(UsageContext)\r\n    const { setLanguage } = useContext(ChatbotContext)\r\n\r\n    const handleFileChange = (e) => {\r\n        console.log('File selected: ', e.target.files[0]);\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!detect && !plag) {\r\n            toast(\"Select the options SetectAI/Plagirism\")\r\n            return;\r\n        }\r\n        console.log(data);\r\n        setLoading(true)\r\n\r\n\r\n        const formData = new FormData();\r\n        console.log('File Selected: ', selectedFile);\r\n        formData.append('file', selectedFile);\r\n        // console.log(data);\r\n        formData.append('body', JSON.stringify(data));\r\n        // console.log(formData.get('body'));\r\n\r\n        // Override the Content-Type for this request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data', // Set the desired Content-Type\r\n            },\r\n        };\r\n\r\n        let detectAnswer = ''\r\n        let plagAnswer = ''\r\n\r\n        try {\r\n            for (var pair of formData.entries()) {\r\n                console.log(pair[0]);\r\n                console.log(pair[1]);\r\n            }\r\n            console.log(formData);\r\n            if (detect) {\r\n                if (chatID) {\r\n                    formData.append('chat_id', chatID)\r\n                }\r\n                try {\r\n                    let { data } = await api.post(`/chatbot/detectai`, formData, config)\r\n                    setChatID(data.chat_id)\r\n                    detectAnswer = data.answer;\r\n                    console.log('Detect Answer: ', data.answer);\r\n                    if (!plag) {\r\n                        setDisablePlag(true);\r\n                        setDisableDetect(true)\r\n                        setAnswer((prev) => [...prev, { answer: data.answer }])\r\n                        setLoading(false)\r\n                        fetchUsage();\r\n                        return;\r\n                    }\r\n                } catch (error) {\r\n                    console.log('Error While Getting detect Data');\r\n                    console.log(error);\r\n                }\r\n\r\n            } else {\r\n                setDisableDetect(true);\r\n            }\r\n\r\n\r\n\r\n            if (plag) {\r\n                try {\r\n                    if (chatID) {\r\n                        formData.append('chat_id', chatID)\r\n                    }\r\n                    let { data } = await api.post(`/chatbot/plagirism`, formData, config)\r\n                    setChatID(data.chat_id)\r\n                    plagAnswer = data.answer[0]\r\n                    console.log('Plag Data: ', data.answer[0]);\r\n                    console.log('Number Check: ', data.answer[0].match(/d+/)[0]);\r\n\r\n                } catch (error) {\r\n                    setDetect(false)\r\n                    setPlag(false)\r\n                    alert('Plagirism Error')\r\n                }\r\n            } else {\r\n                setDisablePlag(true)\r\n                return;\r\n            }\r\n            setDisableDetect(true);\r\n            setDisablePlag(true);\r\n            if (detectAnswer) {\r\n\r\n                setAnswer((prev) => [...prev, { answer: detectAnswer }])\r\n            }\r\n            if (plagAnswer) {\r\n\r\n                setPlagAnswer((prev) => [...prev, { answer: plagAnswer }])\r\n            }\r\n\r\n            setLoading(false)\r\n            fetchUsage();\r\n        } catch (error) {\r\n\r\n            if (error?.response?.status === 429) {\r\n                toast(error?.response?.data?.error)\r\n            }\r\n            console.log('Error: ', error);\r\n            setLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const generateRubric = async () => {\r\n\r\n        let _body = {\r\n            body: {\r\n                essay_question: data.question,\r\n                grade: data.grade\r\n            }\r\n        }\r\n\r\n        try {\r\n            let res = await api.post(`/gradeEssay/rubric`, _body)\r\n\r\n            if (res.statusText === 'OK') {\r\n\r\n                console.log('Response from ChatFrom/Rubric: ', res);\r\n                console.log('Here is the Rubric: ', res.data.rubric);\r\n                // setChatID(res.data.chat_id)\r\n                // setAnswer([{ answer: res.data.answer }])\r\n            }\r\n        } catch (error) {\r\n            console.log('Erro While Rubric Generation');\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div className='md:mr-4'>\r\n            <form onSubmit={handleSubmit} className='mt-10'>\r\n\r\n                {/* <div className='flex flex-col mb-5'>\r\n                    <label htmlFor=\"gradeLevel\" className='font-medium'>\r\n                        Grade Level\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id='grade'\r\n                        name='grade'\r\n                        onChange={handleChange}\r\n                        className='px-2 h-8 rounded border  bg-white outline-none'\r\n                    />\r\n                </div> */}\r\n\r\n                {/* <div className='flex flex-col mb-5'>\r\n                    <label htmlFor=\"question\" className='font-medium'>\r\n                        Question\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id='question'\r\n                        placeholder='Type here'\r\n                        name='question'\r\n                        onChange={handleChange}\r\n                        className='px-2 h-8 rounded border  bg-white outline-none'\r\n                    />\r\n                </div> */}\r\n\r\n\r\n                <div className='flex flex-col mb-5'>\r\n\r\n                    <label\r\n                        htmlFor=\"essayContent\"\r\n                        className=\"block mb-2 text-sm font-medium text-gray-900\">\r\n                        Content\r\n                    </label>\r\n                    <textarea\r\n                        id=\"essayContent\"\r\n                        rows=\"4\"\r\n                        name='text'\r\n                        className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\r\n                        placeholder=\"Add content here or attach file\"\r\n                        onChange={handleChange}\r\n                    >\r\n                    </textarea>\r\n                    {\r\n                        (usage?.noOfFilesUploaded !== usage?.noOfFilesUploadedLimit) ? (\r\n                            <input class=\"block mt-2 mb-5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\" id=\"file_input\" type=\"file\"\r\n                                accept='.pdf, .doc, .docx'\r\n                                onChange={handleFileChange}\r\n                            />\r\n                        ) : (\r\n                            <input class=\"block mt-2 mb-5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\" id=\"file_input\" type=\"file\"\r\n                                disabled\r\n                            />\r\n                        )\r\n                    }\r\n                    {/* <input class=\"block mt-2 mb-5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\" id=\"file_input\" type=\"file\"\r\n                        accept='.pdf'\r\n                        onChange={handleFileChange}\r\n                    /> */}\r\n                </div>\r\n\r\n                {/* <div className='flex flex-col mb-5'>\r\n                    <label\r\n                        htmlFor=\"essayContent\"\r\n                        className=\"block mb-2 text-sm font-medium text-gray-900\">\r\n                        Rubric\r\n                    </label>\r\n                    <textarea\r\n                        id=\"essayContent\"\r\n                        rows=\"4\"\r\n                        name='rubric'\r\n                        className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\r\n                        placeholder=\"Write your thoughts here...\"\r\n                        onChange={handleChange}\r\n                    >\r\n                    </textarea>\r\n            */}\r\n                <div className=' flex flex-col gap-1 mb-5'>\r\n                    <label htmlFor=\"detectai\" className='flex gap-2 cursor-pointer'>\r\n                        <input type=\"checkbox\" id='detectai' onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                                setDetect(true)\r\n                            } else {\r\n                                setDetect(false)\r\n                            }\r\n                        }}\r\n                            disabled={disableDetect}\r\n                        />\r\n                        Detect AI\r\n                    </label>\r\n                    <label htmlFor=\"plagirism\" className='flex gap-2 cursor-pointer'>\r\n                        <input type=\"checkbox\" id='plagirism' onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                                setPlag(true)\r\n                            } else {\r\n                                setPlag(false)\r\n                            }\r\n                        }}\r\n                            disabled={diablePlag}\r\n                        />\r\n                        Plagirism\r\n                    </label>\r\n                </div>\r\n\r\n                {/* </div> */}\r\n\r\n\r\n                {/* <div className='flex flex-col mb-5'>\r\n                    <label htmlFor=\"rubric\" className='font-medium'>\r\n                        Custom Rubric\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id='rubric'\r\n                        name='rubric'\r\n                        onChange={handleChange}\r\n                        className='px-2 h-8 rounded border  bg-white outline-none'\r\n                    />\r\n                </div> */}\r\n\r\n\r\n                <div className='flex flex-col mb-5'>\r\n                    <label htmlFor=\"language\" className='font-medium'>\r\n                        Language\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id='language'\r\n                        name='language'\r\n                        placeholder='English'\r\n                        value={data?.language}\r\n                        onChange={(e) => {\r\n                            handleChange(e);\r\n                            setLanguage(e.target.value)\r\n                        }}\r\n                        className='px-2 h-8 rounded border  bg-white outline-none'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\r\n                </div>\r\n            </form>\r\n            {/* <button className=' bg-blue-300 max-w-max px-2 py-2' onClick={generateRubric}>Generate Rubric</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatForm","import React from 'react'\nimport FacebookCircularProgress from './CircularLoading'\n\nconst Loading = () => {\n    return (\n        <div className='flex justify-center items-center text-5xl text-white absolute left-0 right-0 bottom-0 top-0'>\n            <div className='absolute left-0 right-0 bottom-0 top-0 opacity-20 bg-gray-700 -z-10'>\n\n            </div>\n            <div aria-label=\"Loading...\" role=\"status\">\n                <svg class=\"h-20 w-20 animate-spin\" viewBox=\"3 3 18 18\">\n                    <path\n                        class=\"fill-gray-200\"\n                        d=\"M12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5ZM3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z\"></path>\n                    <path\n                        class=\"fill-gray-800\"\n                        d=\"M16.9497 7.05015C14.2161 4.31648 9.78392 4.31648 7.05025 7.05015C6.65973 7.44067 6.02656 7.44067 5.63604 7.05015C5.24551 6.65962 5.24551 6.02646 5.63604 5.63593C9.15076 2.12121 14.8492 2.12121 18.364 5.63593C18.7545 6.02646 18.7545 6.65962 18.364 7.05015C17.9734 7.44067 17.3403 7.44067 16.9497 7.05015Z\"></path>\n                </svg>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading","import React, { useRef, useState } from \"react\";\r\n\r\nimport ChatForm from \"./ChatForm\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport Header from \"../Header\";\r\nimport api from \"../../../util/api\";\r\nimport ExamplePrompts from \"../ExamplePrompts\";\r\nimport ExportButtons from \"../ExportButtons\";\r\n\r\nimport _9_DetectAI from \"../../../images/bots/9.Detect AI-Writing & Plagiarism - Ali.png\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { UsageContext } from \"../../../context/UsageContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport DonutChart, { PlagDonutChart } from \"../../Donut/DonutChart\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { ChatbotContext } from \"../../../context/ChatbotContext\";\r\nimport Categories from \"../../Dashboard/components/Categories\";\r\n\r\nconst DetectAI = () => {\r\n  const [answer, setAnswer] = useState([]);\r\n  const [plagAnswer, setPlagAnswer] = useState([]);\r\n\r\n  const [prompt, setPrompt] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [chatID, setChatID] = useState(\"\");\r\n\r\n  const [detect, setDetect] = useState(false);\r\n  const [plag, setPlag] = useState(false);\r\n\r\n  const componentRef = useRef(null);\r\n\r\n  const { fetchUsage } = useContext(UsageContext);\r\n\r\n  const { setSelectedCategory } = useContext(ChatbotContext);\r\n  useEffect(() => {\r\n    setSelectedCategory(\"Assessment & Progress Monitoring\");\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    let data = {\r\n      body: {\r\n        prompt,\r\n      },\r\n      chat_id: chatID,\r\n    };\r\n\r\n    try {\r\n      let res = await api.post(`/chatbot/detectai`, data);\r\n\r\n      if (res.statusText === \"OK\") {\r\n        console.log(\"Here is the answer: \", res.data.answer);\r\n\r\n        setAnswer([...answer, { question: prompt, answer: res.data.answer }]);\r\n        setPrompt(\"\");\r\n        setLoading(false);\r\n        fetchUsage();\r\n      }\r\n    } catch (error) {\r\n      if (error?.response?.status === 429) {\r\n        toast(error?.response?.data?.error);\r\n      }\r\n      console.log(\"Error: \", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-b-2 border-black pb-24\">\r\n      <div>\r\n        <Categories />\r\n      </div>\r\n      <div className=\" flex flex-col md:flex-row gap-5\">\r\n        <div className=\"md:border-r border-secondary w-full md:max-w-[350px]\">\r\n          <Header\r\n            name={\"Ali\"}\r\n            image={_9_DetectAI}\r\n            heading={\"Detect AI-Writing & Plagiarism\"}\r\n            desc={\r\n              \"Allow me to aid you in ensuring originality and integrity by detecting AI-generated content and identifying plagiarism effectively.\"\r\n            }\r\n          />\r\n\r\n          <hr className=\"h-[2px] bg-secondary\" />\r\n\r\n          <ChatForm\r\n            setAnswer={setAnswer}\r\n            setPlagAnswer={setPlagAnswer}\r\n            setLoading={setLoading}\r\n            chatID={chatID}\r\n            setChatID={setChatID}\r\n            plag={plag}\r\n            setPlag={setPlag}\r\n            detect={detect}\r\n            setDetect={setDetect}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"max-h-[100vh] pb-5 flex flex-1 gap-3\">\r\n          <div\r\n            className={`flex-[2] ${\r\n              answer?.length > 0 ? \"border-r border-black\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\" border-b-2 flex gap-3\">\r\n              <button className=\" bg-slate-300 px-4 py-2\">Output</button>\r\n              <button className=\" px-4 py-2\">History</button>\r\n            </div>\r\n            {answer?.length > 0 || plagAnswer?.length > 0 ? (\r\n              <div>\r\n                <div className=\"relative\" ref={componentRef}>\r\n                  {/* <Answer answer={answer} /> */}\r\n                  {loading && <Loading />}\r\n                  {(answer || plagAnswer) && (\r\n                    <div className=\"left-0 top-0 right-0 bottom-0 md:absolute overflow-y-scroll break-words h-[80vh]\">\r\n                      {detect && answer && (\r\n                        <>\r\n                          <div className=\"mt-3\">\r\n                            <h2 className=\"text-center mb-1 text-3xl font-bold\">\r\n                              Detect AI Percentage\r\n                            </h2>\r\n                            <h4 className=\"text-lg font-bold text-center\">\r\n                              The amount of detected is{\" \"}\r\n                              {answer &&\r\n                                answer[0].answer.match(/\\d+/g).map(Number)[0]}\r\n                              %\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"flex justify-center mt-5 mb-2\">\r\n                            <div className=\"w-44 h-44\">\r\n                              <div className=\"flex gap-2\">\r\n                                <div className=\" h-5 w-5 bg-red-600\"></div>\r\n                                <span>Detect AI Percentage</span>\r\n                              </div>\r\n                              <DonutChart\r\n                                data={[\r\n                                  {\r\n                                    label: \"Detect AI\",\r\n                                    percentage:\r\n                                      100 -\r\n                                      answer[0].answer\r\n                                        .match(/\\d+/g)\r\n                                        .map(Number)[0],\r\n                                  },\r\n                                  {\r\n                                    label: \"Plagiarism\",\r\n                                    percentage: answer[0].answer\r\n                                      .match(/\\d+/g)\r\n                                      .map(Number)[0],\r\n                                  },\r\n                                ]}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n\r\n                      {plag && plagAnswer && (\r\n                        <div>\r\n                          <div className=\"mt-16\">\r\n                            <h2 className=\"text-center mb-1 text-3xl font-bold\">\r\n                              Detect Plagiarism\r\n                            </h2>\r\n                            {/* <h4 className='text-lg font-bold text-center'>\r\n                                                                    The amount of Plagiarism is {(answer[0].answer.match(/\\d+/g)).map(Number)[0] + (Math.floor(Math.random() * (10 - 5 + 1)) + 5)}%\r\n                                                                </h4> */}\r\n                          </div>\r\n                          <div className=\"flex flex-col gap-16 justify-center mt-4\">\r\n\r\n                            {Array.isArray(plagAnswer[0]) ? (\r\n                              <>\r\n                                <div className=\" flex justify-center\">\r\n                                  <div className=\" w-44 h-44\">\r\n                                    <div className=\"flex gap-2\">\r\n                                      <div\r\n                                        className=\" h-5 w-5\"\r\n                                        style={{ backgroundColor: \"yellow\" }}\r\n                                      ></div>\r\n                                      <span>Plagerism Percentage</span>\r\n                                    </div>\r\n                                    <PlagDonutChart\r\n                                      data={[\r\n                                        {\r\n                                          label: \"Detect AI\",\r\n                                          percentage:\r\n                                            100 -\r\n                                            plagAnswer[0].answer.match(\r\n                                              /\\d+/\r\n                                            )[0],\r\n                                        },\r\n                                        {\r\n                                          label: \"Plagiarism\",\r\n                                          percentage:\r\n                                            plagAnswer[0].answer.match(\r\n                                              /\\d+/\r\n                                            )[0],\r\n                                        },\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  {plagAnswer && (\r\n                                    <div\r\n                                      className=\" prose text-sm\"\r\n                                      style={{ minWidth: \"100%\" }}\r\n                                      dangerouslySetInnerHTML={{\r\n                                        __html: plagAnswer[0].answer\r\n                                          .replace(\r\n                                            /Average similarity: \\d+ %/g,\r\n                                            \"<h2>$&</h2>\"\r\n                                          )\r\n                                          .replace(\r\n                                            /Plagiarism occurred in the following/,\r\n                                            \"<h4>$&</h4>\"\r\n                                          )\r\n                                          .replace(/URLs:/g, \"\")\r\n                                          .replace(/-URL:/g, \"\")\r\n                                          .replace(\r\n                                            /(https?:\\/\\/[^\\s]+)/g,\r\n                                            function (url) {\r\n                                              return `<a href=\"${url}\" target=\"_blank\" style=\"color: blue;\">${url}</a>`;\r\n                                            }\r\n                                          )\r\n                                          .replace(\r\n                                            /Similarity: \\d+ %/g,\r\n                                            \"<b>$&</b><br/>\"\r\n                                          )\r\n                                          .replace(\r\n                                            /Plagiarism occurred in the following sections:/,\r\n                                            \"<h3>Plagiarism occurred in the following sections:</h3>\"\r\n                                          )\r\n                                          .replace(\r\n                                            /-section: /g,\r\n                                            \"<br /><br /><b>Section:</b> \"\r\n                                          ),\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            ) : (\r\n                              <p>{plagAnswer[0].answer}</p>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* <ShortForm\r\n                                        prompt={prompt}\r\n                                        setPrompt={setPrompt}\r\n                                        handleSubmit={handleSubmit}\r\n                                    /> */}\r\n              </div>\r\n            ) : (\r\n              <div className=\" flex justify-center items-center w-full h-full relative\">\r\n                <p>\r\n                  Try variaty of inputs and input lengths to get the best\r\n                  results\r\n                </p>\r\n                {loading && <Loading />}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* {(answer.length > 0) && <ExamplePrompts />} */}\r\n        </div>\r\n      </div>\r\n\r\n      <ExportButtons componentToPrint={componentRef} answer={answer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetectAI;\r\n","import React, { useState } from 'react'\nimport api from '../../../util/api';\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\nimport { ChatbotContext } from '../../../context/ChatbotContext';\n\n\nconst ChatForm = ({ setAnswer, setLoading, setChatID, setFileName, fetchFile }) => {\n\n    const [data, setData] = useState({ language: 'English' })\n\n    const { fetchUsage } = useContext(UsageContext);\n    const { setLanguage } = useContext(ChatbotContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(data);\n\n        if (data.number_of_slides > 20) {\n            toast(\"Maximum Slides could be 20\")\n            return\n        }\n\n        setLoading(true)\n        let _body = {\n            body: data\n        }\n\n        try {\n            let res = await api.post(`/chatbot/presentation`, _body)\n\n            if (res.statusText === 'OK') {\n\n                const { data } = res\n                // console.log('Response from chatform: ', res);\n                console.log('Here is the answer: ', data.answer);\n\n                setChatID(data.chat_id)\n\n                let fileName = data.answer.split('/')\n                fileName = fileName[fileName.length - 1]\n\n                console.log('FileName: ', fileName);\n                setAnswer([{ answer: fileName.split('_')[1] }])\n\n                setFileName(fileName)\n                fetchFile(fileName)\n                setLoading(false)\n                fetchUsage();\n            }\n        } catch (error) {\n\n            if (error?.response?.status === 429) {\n                toast(error?.response?.data?.error)\n            }\n            console.log('Error: ', error);\n\n            setLoading(false)\n\n        }\n\n    }\n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target\n\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n    return (\n        <div className='mr-4'>\n            <form onSubmit={handleSubmit} className='mt-10'>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"grade\" className='font-medium'>\n                        Grade\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='grade'\n                        name='grade'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        placeholder='Type here'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n\n                <div className='flex flex-col mb-5'>\n\n                    <label\n                        htmlFor=\"description\"\n                        className=\"block mb-2 text-sm font-medium text-gray-900\">\n                        Description\n                    </label>\n                    <textarea\n                        id=\"description\"\n                        rows=\"4\"\n                        name='description'\n                        className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"Add description of your PowerPoint Presentation\"\n                        onChange={handleChange}\n                    >\n                    </textarea>\n                </div>\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"subject\" className='font-medium'>\n                        Subject\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='subject'\n                        name='subject'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"summary\" className='font-medium'>\n                        Short Summary Learning Objectives\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='summary'\n                        name='summary'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n\n                {/* <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"type\" className='font-medium'>\n                        Quiz Type (Eg: multiple choice, true or false etc)\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='type'\n                        name='type'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div> */}\n\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"noOfSlides\" className='font-medium'>\n                        Number of Slides\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='noOfSlides'\n                        name='number_of_slides'\n                        placeholder='Maximum 20 slides'\n                        onChange={handleChange}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div className='flex flex-col mb-5'>\n                    <label htmlFor=\"language\" className='font-medium'>\n                        Language\n                    </label>\n                    <input\n                        type=\"text\"\n                        id='language'\n                        name='language'\n                        placeholder='English'\n                        value={data?.language}\n                        onChange={(e) => {\n                            handleChange(e);\n                            setLoading(e.target.value)\n                        }}\n                        className='px-2 h-8 rounded border  bg-white outline-none'\n                    />\n                </div>\n                <div>\n                    <button className='px-5 py-2 rounded-lg bg-secondary text-white'>submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatForm","import React from 'react'\n\n\nconst Loading = ({ message }) => {\n    return (\n        <div className='flex justify-center items-center text-5xl text-white absolute left-0 right-0 bottom-0 top-0'>\n            <div className='absolute left-0 right-0 bottom-0 top-0 opacity-20 bg-gray-700 -z-10'>\n\n            </div>\n\n            {/* {message ? message : \"Loading....\"} */}\n            <div aria-label=\"Loading...\" role=\"status\">\n                <svg class=\"h-20 w-20 animate-spin\" viewBox=\"3 3 18 18\">\n                    <path\n                        class=\"fill-gray-200\"\n                        d=\"M12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5ZM3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z\"></path>\n                    <path\n                        class=\"fill-gray-800\"\n                        d=\"M16.9497 7.05015C14.2161 4.31648 9.78392 4.31648 7.05025 7.05015C6.65973 7.44067 6.02656 7.44067 5.63604 7.05015C5.24551 6.65962 5.24551 6.02646 5.63604 5.63593C9.15076 2.12121 14.8492 2.12121 18.364 5.63593C18.7545 6.02646 18.7545 6.65962 18.364 7.05015C17.9734 7.44067 17.3403 7.44067 16.9497 7.05015Z\"></path>\n                </svg>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading","import React, { useRef, useState, useEffect } from 'react'\n\nimport ChatForm from './ChatForm'\n\nimport Loading from './Loading'\nimport Header from '../Header'\nimport api from '../../../util/api';\nimport Answer from '../Answer';\nimport ExamplePrompts from '../ExamplePrompts';\nimport ExportButtons from '../ExportButtons';\n\n\n\nimport _10_PowerPoint from '../../../images/bots/10.PowerPoint Presentation - Priyanka.png'\nimport { useContext } from 'react';\nimport { UsageContext } from '../../../context/UsageContext';\nimport { toast } from 'react-toastify';\n\nimport { ChatbotContext } from '../../../context/ChatbotContext';\nimport Categories from '../../Dashboard/components/Categories';\n\n\nconst PowerPoint = () => {\n\n    const componentRef = useRef(null);\n\n    const [answer, setAnswer] = useState([])\n    const [prompt, setPrompt] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [message, setMessage] = useState(null)\n    const [chatID, setChatID] = useState('')\n    const [fileData, setFileData] = useState(null);\n    const [fileName, setFileName] = useState(null);\n\n\n    const { fetchUsage } = useContext(UsageContext);\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault();\n\n    //     setLoading(true);\n\n    //     let data = {\n    //         body: {\n    //             prompt\n    //         },\n    //         chat_id: chatID\n    //     }\n\n\n    //     try {\n    //         let res = await api.post(`/quiz`, data);\n\n    //         if (res.statusText === 'OK') {\n\n    //             console.log('Here is the answer: ', res.data.answer);\n\n    //             setAnswer([...answer, { question: prompt, answer: res.data.answer }])\n    //             setPrompt('')\n    //             setLoading(false)\n    //             fetchUsage();\n    //         }\n    //     } catch (error) {\n    //         if (error?.response?.status === 429) {\n    //             toast(error?.response?.data?.error)\n    //         }\n    //         console.log('Error: ', error);\n    //         setLoading(false)\n    //     }\n\n    // }\n\n\n    const fetchFile = (fileName) => {\n        let url = `/chatbot/presentation/download/${fileName}`\n\n        // Make the HTTP GET request to your API\n        api.get(url, { responseType: 'arraybuffer' })\n            .then(response => {\n                // Handle the successful response here\n                const blob = new Blob([response.data], { type: response.headers['content-type'] });\n                setFileData(blob);\n            })\n            .catch(error => {\n                // Handle any errors here\n                console.error('Error:', error);\n            });\n    }\n\n\n    const handleDownloadClick = () => {\n        if (fileData) {\n            const url = window.URL.createObjectURL(fileData);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = `${fileName.split('_')[1]}`; // Set the desired file name\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n        } else {\n            console.log('fileData is not there');\n        }\n    };\n\n\n    const { setSelectedCategory } = useContext(ChatbotContext)\n    useEffect(() => {\n        setSelectedCategory('Digital Learning & Teaching Tools')\n    }, [])\n\n    return (\n        <div className='border-b-2 border-black pb-24'>\n            <div>\n                <Categories />\n            </div>\n            <div className=' flex flex-col md:flex-row gap-5'>\n\n                <div className='border-r border-secondary max-w-[350px]'>\n                    <Header\n                        name={'Priyanka'}\n                        image={_10_PowerPoint}\n                        heading={'Power Point Presentation'}\n                        desc={'Allow me to assist you in creating dynamic PowerPoint presentations with ease, simplifying content delivery and engagement for your audience.'}\n                    />\n\n                    <hr className='h-[2px] bg-secondary' />\n\n                    <ChatForm\n                        setAnswer={setAnswer}\n                        setLoading={setLoading}\n                        setChatID={setChatID}\n                        setFileName={setFileName}\n                        fetchFile={fetchFile}\n                        dontFollow={true}\n                    />\n\n                </div>\n\n                <div className='max-h-[100vh] pb-5 flex flex-1 gap-3'>\n                    <div className={`flex-[2] ${answer.length > 0 ? 'border-r border-black' : ''}`}>\n                        <div className=' border-b-2 flex gap-3'>\n                            <button className=' bg-slate-300 px-4 py-2'>Output</button>\n                            {/* <button className=' px-4 py-2'>History</button> */}\n                        </div>\n                        {\n                            (answer.length > 0) ? (\n                                <div className=' relative'>\n                                    <div className='relative' ref={componentRef}>\n\n                                        <Answer answer={answer} />\n                                        {loading && <Loading />}\n\n                                    </div>\n                                    {\n                                        fileData &&\n                                        <button onClick={handleDownloadClick} disabled={!fileData ? true : false} className=' bg-blue-500 px-5 py-3 rounded absolute top-12 left-0'>Download File</button>\n                                    }\n\n                                    {/* <ShortForm\n                                        prompt={prompt}\n                                        setPrompt={setPrompt}\n                                        handleSubmit={handleSubmit}\n                                    /> */}\n                                </div>\n                            )\n                                : (\n                                    <div className=' flex justify-center items-center w-full h-full relative'>\n                                        <p>Try variaty of inputs and input lengths to get the best results</p>\n                                        {\n                                            loading && <Loading message={message} />\n                                        }\n                                    </div>\n                                )\n\n                        }\n                    </div>\n\n                    {(answer.length > 0) && <ExamplePrompts examplePrompts={[]} />}\n\n                </div>\n            </div>\n\n            <ExportButtons componentToPrint={componentRef} answer={answer} />\n\n        </div>\n    )\n}\n\nexport default PowerPoint","import React from 'react'\r\n\r\nconst Layout = ({ heading, children}) => {\r\n  return (\r\n    <div className=' mx-3 my-4 shadow-gray-300 rounded-md shadow-md px-10 py-7'>\r\n        <h3 className=' my-2 mb-4 text-2xl font-bold'>{heading}</h3>\r\n        {\r\n            children\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\n\r\nimport Layout from '../Layout';\r\nimport { toast } from 'react-toastify';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../../../context/UserContext';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport api from '../../../../util/api';\r\n\r\nconst Profile = () => {\r\n\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const { user, getUserData } = useContext(UserContext);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({ ...prev, [name]: value }))\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      console.log('request_data: ', userData);\r\n\r\n\r\n\r\n      const { data } = await api.put('/me', userData);\r\n      getUserData()\r\n      console.log('data: ', data);\r\n      toast(\"Profile Updated!\");\r\n    } catch (error) {\r\n      console.log(\"Error: \", error);\r\n      toast(\"Profile Udpated Failed!\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setUserData({\r\n      firstName: user?.firstName,\r\n      lastName: user?.lastName,\r\n      country: user?.country,\r\n      emailUpdate: user?.emailUpdate\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Layout heading=\"My Details\">\r\n      <div>\r\n        <form class=\"w-full max-w-lg\" onSubmit={handleSubmit}>\r\n          <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n\r\n            <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\r\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\r\n                First Name\r\n              </label>\r\n              <input\r\n                onChange={handleChange}\r\n                name='firstName'\r\n                value={userData?.firstName}\r\n                class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\" id=\"grid-first-name\" type=\"text\" placeholder=\"Jane\" />\r\n              {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\r\n            </div>\r\n\r\n            <div class=\"w-full md:w-1/2 px-3\">\r\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-last-name\">\r\n                Last Name\r\n              </label>\r\n              <input\r\n                onChange={handleChange}\r\n                name='lastName'\r\n                value={userData?.lastName}\r\n                class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-last-name\" type=\"text\" placeholder=\"Doe\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n            {/* <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-city\">\r\n                City\r\n              </label>\r\n              <input class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-city\" type=\"text\" placeholder=\"Albuquerque\" />\r\n            </div> */}\r\n\r\n            <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\r\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\r\n                Country\r\n              </label>\r\n              <input\r\n                onChange={handleChange}\r\n                name='country'\r\n                value={userData?.country}\r\n                class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-last-name\" type=\"text\" placeholder=\"Enter Your Country\" />\r\n            </div>\r\n          </div>\r\n          <button className=' bg-blue-600 py-3 px-5 rounded text-white mt-4' type='submit'>Update Details</button>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Layout from '../Layout'\r\nimport { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport api from '../../../../util/api'\r\n\r\nconst ChangePassword = () => {\r\n\r\n  const [currentPassword, setCurrentPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n\r\n  const hanldeSubmit = async () => {\r\n\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      toast(\"New Password Must repeat same\");\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      currentPassword,\r\n      newPassword,\r\n      confirmNewPassword\r\n    }\r\n    try {\r\n      const res = await api.put(\"/changepassword\", data);\r\n      toast(\"password changed!\")\r\n      setCurrentPassword('')\r\n      setNewPassword('')\r\n      setConfirmNewPassword('')\r\n    } catch (error) {\r\n      console.log('Error: ', error);\r\n      toast(\"Error While Password Change\");\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Layout heading=\"Change Password\">\r\n      <div class=\"flex flex-wrap -mx-3 mb-6 w-8/12\">\r\n        <div class=\"w-full px-3\">\r\n          <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-password\">\r\n            Current Password\r\n          </label>\r\n          <input onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-password\" type=\"password\" placeholder=\"Current Password\" />\r\n          {/* <p class=\"text-gray-600 text-xs italic\">Make it as long and as crazy as you'd like</p> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex flex-wrap -mx-3 w-8/12\">\r\n        <div class=\"w-full px-3\">\r\n          <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-password\">\r\n            New Password\r\n          </label>\r\n          <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-password\" type=\"password\" placeholder=\"New Password\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex flex-wrap -mx-3 w-8/12\">\r\n        <div class=\"w-full px-3\">\r\n          <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-password\" type=\"password\" placeholder=\"Confirm Password\" />\r\n          {/* <p class=\"text-gray-600 text-xs italic\">Make it as long and as crazy as you'd like</p> */}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={hanldeSubmit} className=' bg-blue-600 py-3 px-5 rounded text-white mt-4' type='submit'>Change Password</button>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ChangePassword","import React from 'react'\r\nimport Layout from '../Layout'\r\nimport { useContext } from 'react'\r\nimport { UsageContext } from '../../../../context/UsageContext'\r\nimport { toast } from 'react-toastify'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport api from '../../../../util/api'\r\nimport { UserContext } from '../../../../context/UserContext'\r\n\r\nconst DeleteAccount = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { usage } = useContext(UsageContext);\r\n  const { setIsAuthenticated, setUser } = useContext(UserContext)\r\n\r\n  const deleteAccount = async () => {\r\n    // let check = confirm(\"Do you want to delete The Account?\")\r\n    // if (check) {\r\n    try {\r\n      const res = await api.delete(`/account`)\r\n      toast(\"Account Successfuly Deleted\");\r\n      delete api.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem(\"teachai_token\")\r\n      localStorage.removeItem(\"teachai_user\")\r\n      setIsAuthenticated(false)\r\n      setUser(null);\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.log('Error While Deleting ACcount: ', error);\r\n      toast(\"Error While Deleting Account\")\r\n    }\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <Layout heading=\"My Subscription\">\r\n      <div>\r\n        <p><span className=' text-2xl font-bold'>Access Level:</span> {usage?.plan} </p>\r\n        <button onClick={deleteAccount} className=' bg-blue-600 py-3 px-5 rounded text-white mt-4' type='submit'>Account Deletion</button>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default DeleteAccount","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport api from '../../../../util/api';\r\nimport Layout from '../Layout';\r\n\r\nconst ChangeEmail = () => {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async () => {\r\n    let data = {\r\n      email,\r\n      password\r\n    }\r\n\r\n    try {\r\n      const res = await api.put('/changeEmail', data)\r\n      toast(\"Email Changed\");\r\n      setEmail('')\r\n      setPassword('')\r\n    } catch (error) {\r\n      console.log('Error: ', error);\r\n      toast(\"Error While changing the Email!\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout heading=\"Change Email Address\">\r\n      <div>\r\n        <div class=\"flex flex-wrap -mx-3 w-8/12\">\r\n          <div class=\"w-full px-3\">\r\n            <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-password\">\r\n              Email\r\n            </label>\r\n            <input onChange={(e) => setEmail(e.target.value)} value={email} class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-password\" type=\"email\" placeholder=\"Enter Your New Email\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"flex flex-wrap -mx-3 w-8/12\">\r\n          <div class=\"w-full px-3\">\r\n            <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-password\">\r\n              Confirm Password\r\n            </label>\r\n            <input onChange={(e) => setPassword(e.target.value)} value={password} class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-password\" type=\"password\" placeholder=\"Your Password\" />\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={handleSubmit} className=' bg-blue-600 py-3 px-5 rounded text-white mt-4' type='submit'>Change Email Address</button>\r\n\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ChangeEmail","import React from 'react'\r\nimport Layout from '../Layout';\r\n\r\nimport api from '../../../../util/api'\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../../../context/UserContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TwoFA = () => {\r\n\r\n  const { user, getUserData } = useContext(UserContext);\r\n\r\n  const handleTwoFA = async (enabled) => {\r\n\r\n    try {\r\n      const { data } = await api.put('/enable-2fa', { enabled })\r\n      let message =  enabled ? \"2FA is Enabled\" : \"2FA is Disabled\"\r\n      toast(message)\r\n      getUserData()\r\n    } catch (error) {\r\n      toast(\"error while 2fa\")\r\n    }\r\n    console.log('change 2fa');\r\n  }\r\n\r\n  return (\r\n    <Layout heading=\"Secure Your Account\">\r\n      <div>\r\n        <p className=\"text-xl font-['Poppins']\">Two-factor authentication adds an extra layer of security to your account. To log in, in addition you'll need to provide a 6 digit code.</p>\r\n\r\n        <div className=\"flex gap-5\">\r\n          <button className=' bg-blue-600 py-3 px-5 rounded text-white mt-4' type='submit'>Enable 2FA</button>\r\n          <button onClick={() => handleTwoFA(true)} className=' border-2 border-blue-600 py-3 px-5 rounded mt-4' type='submit'>Yes</button>\r\n          <button onClick={() => handleTwoFA(false)} className=' border-2 border-blue-600 py-3 px-5 rounded mt-4' type='submit'>No</button>\r\n        </div>\r\n        <div>\r\n          Status: {user?.TwoFA ? \"Yes\" : \"No\"}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default TwoFA","import React from 'react'\r\n\r\nimport Profile from './components/Profile';\r\nimport ChangePassword from './components/ChangePassword';\r\nimport DeleteAccount from './components/DeleteAccount';\r\nimport ChangeEmail from './components/ChangeEmail';\r\nimport TwoFA from './components/TwoFA';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <div className=' grid grid-cols-1 md:grid-cols-2 gap-5'>\r\n                <Profile />\r\n                <TwoFA />\r\n                <ChangePassword />\r\n                <ChangeEmail />\r\n                <DeleteAccount />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React, { useContext } from 'react'\nimport Aside from './Aside'\nimport { UserContext } from '../../context/UserContext'\nimport { Route, Routes } from 'react-router-dom'\nimport Chatbots from './components/Chatbots'\nimport { ChatbotProvider } from '../../context/ChatbotContext'\n\n\nimport LessonPlanner from '../Chatbots/LessonPlanner/LessonPlanner'\nimport Quiz from '../Chatbots/Quiz/Quiz'\nimport Essay from '../Chatbots/Essay/Essay'\nimport LessonComprehension from '../Chatbots/LessonComprehension/LessonComprehension'\nimport MathQuiz from '../Chatbots/MathQuiz/MathQuiz'\nimport MathLessonPlanner from '../Chatbots/MathLessonPlanner/MathLessonPlanner'\nimport VideoToNotes from '../Chatbots/VideoToNotes/VideoToNotes'\nimport VideoToQuiz from '../Chatbots/VideoToQuiz/VideoToQuiz'\nimport { UsageProvider } from '../../context/UsageContext'\nimport DetectAI from '../Chatbots/DetectAI/DetectAI'\nimport PowerPoint from '../Chatbots/PowerPoint/PowerPoint'\nimport Settings from './Settings/Settings'\n\nconst UserDashboard = () => {\n\n    const { isAuthenticated } = useContext(UserContext)\n\n    if (!isAuthenticated) return <div>Loading....</div>\n\n    return (\n        <UsageProvider>\n            <ChatbotProvider>\n                <div className=' max-w-[1640px] mx-auto'>\n                    <div className=\"flex flex-col md:flex-row\">\n                        {/* <div className='flex flex-col'> */}\n                            {/* <div>\n                                <h3 className=' text-xl font-bold'>Package Details</h3>\n                            </div> */}\n                            <div className=\" md:flex-[2] md:mt-52\">\n                                <Aside />\n                            </div>\n                        {/* </div> */}\n\n                        <main className=\"mt-5 min-h-screen md:mt-0 md:flex-[10]\">\n                            <div className=\"px-2 md:px-6 pt-2\">\n\n                                <Routes>\n\n\n                                    {/* <Route path={`history/*`} element={<ChatHistory />} /> */}\n\n                                    <Route path={`chatbots`} element={<Chatbots />} />\n\n                                    <Route path={`chatbot/lesson-planner`} element={<LessonPlanner />} />\n\n                                    <Route path={`chatbot/quiz`} element={<Quiz />} />\n\n                                    <Route path={`chatbot/essay`} element={<Essay />} />\n\n                                    <Route path={`chatbot/lessonComp`} element={<LessonComprehension />} />\n\n                                    <Route path={`chatbot/mathquiz`} element={<MathQuiz />} />\n\n                                    <Route path={`chatbot/math-lesson-planner`} element={<MathLessonPlanner />} />\n\n                                    <Route path={`chatbot/video-summarize`} element={<VideoToNotes />} />\n\n                                    <Route path={`chatbot/video-to-quiz`} element={<VideoToQuiz />} />\n\n                                    <Route path={`chatbot/detect-ai`} element={<DetectAI />} />\n\n                                    <Route path={`chatbot/powerpoint-presentation`} element={<PowerPoint />} />\n\n                                    <Route path={`settings`} element={<Settings />} />\n\n                                </Routes>\n\n                            </div>\n                        </main>\n                    </div>\n                </div>\n            </ChatbotProvider>\n        </UsageProvider>\n    )\n}\n\nexport default UserDashboard","\r\nimport React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport { Chart, ArcElement } from 'chart.js'\r\nimport { useEffect } from 'react';\r\nChart.register(ArcElement);\r\n\r\n\r\nconst DetectDonutChart = ({ data }) => {\r\n\r\n  useEffect(() => {\r\n    console.log('data: ', data);\r\n\r\n\r\n  }, [])\r\n\r\n  const chartData = {\r\n    labels: data.map(item => item.label),\r\n    datasets: [{\r\n      data: data.map(item => item.percentage),\r\n      backgroundColor: ['green', 'red'],\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Doughnut data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetectDonutChart\r\n\r\n\r\nexport const PlagDonutChart = ({ data }) => {\r\n\r\n  useEffect(() => {\r\n    console.log('data: ', data);\r\n\r\n\r\n  }, [])\r\n\r\n  const chartData = {\r\n    labels: data.map(item => item.label),\r\n    datasets: [{\r\n      data: data.map(item => item.percentage),\r\n      backgroundColor: ['green', 'yellow'],\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Doughnut data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { createContext, useState } from 'react';\r\nimport api from '../util/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const UsageContext = createContext();\r\n\r\nexport const UsageProvider = ({ children }) => {\r\n\r\n    const [usage, setUsage] = useState(null);\r\n    const [creditWidth, setCreditWidth] = useState(0)\r\n    const [uploadBarWidth, setUploadBarWidth] = useState(0)\r\n\r\n    const fetchUsage = async () => {\r\n        try {\r\n            const { data } = await api.get('/getUsage');\r\n            const { usage } = data\r\n            setUsage(usage)\r\n            console.log('Usage: ', usage);\r\n            let width = Math.floor(((usage?.usageCount - 1 ) * 100) / usage?.usageLimit)\r\n            let upload = Math.floor(((usage?.noOfFilesUploaded) * 100) / usage?.noOfFilesUploadedLimit)\r\n            setCreditWidth(width);\r\n            setUploadBarWidth(upload)\r\n        } catch (error) {\r\n            toast(\"Error Usage Data\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UsageContext.Provider value={{ usage, creditWidth, uploadBarWidth, fetchUsage }}>\r\n            {children}\r\n        </UsageContext.Provider>\r\n    );\r\n};"],"names":["_ref","selectedCategory","setSelectedCategory","logout","useContext","UserContext","_useContext2","UsageContext","fetchUsage","usage","creditWidth","uploadBarWidth","useEffect","console","log","Math","floor","usageCount","usageLimit","_jsx","className","children","_jsxs","Link","to","xmlns","width","height","fill","viewBox","d","plan","style","concat","noOfFilesUploaded","noOfFilesUploadedLimit","onClick","el","url","boxShadow","src","icon","alt","title","name","description","chatbots","ChatbotContext","map","i","ProductivityItem","heading","desc","navigate","useNavigate","pathname","useLocation","_useContext","filterChatbots","includes","window","innerWidth","str","limit","length","slice","Header","Categories","Productivity","setAnswer","setLoading","setChatID","_useState","useState","language","_useState2","_slicedToArray","data","setData","setLanguage","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_body","res","_error$response","_error$response2","_error$response2$data","wrap","_context","prev","next","preventDefault","body","api","post","sent","statusText","answer","chat_id","t0","response","status","toast","error","stop","_x","apply","arguments","handleChange","_e$target","target","value","_objectSpread","_defineProperty","onSubmit","htmlFor","type","id","placeholder","onChange","image","login","setLogin","GoogleLogin","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","componentToPrint","handleToPrint","useReactToPrint","content","current","documentTitle","onAfterPrint","alert","pageStyle","handleGoogleDoc","fileName","tag","getDateString","getTimeString","accessToken","gapi","auth","getToken","access_token","documentFileContent","replace","fetch","method","headers","Headers","then","json","val","documentId","JSON","stringify","requests","insertText","location","index","text","updateResponse","ok","catch","open","zerofill","date","Date","getFullYear","getMonth","getDate","toLocaleTimeString","load","client","init","apiKey","scope","excel","fn","table","document","createElement","thead","trH","thQ","innerText","thA","append","tbody","tr","tdQuestion","tdAnswer","tdAns","workbook","XLSX","table_to_book","ws","Sheets","sheet_add_aoa","toISOString","origin","pdf","doc","encodeURIComponent","downloadLink","href","download","click","docs","_Fragment","Login","getElementById","lastChild","lastElementChild","subtractHeight","clientHeight","scrollTop","scrollHeight","slideDown","newText","question","dangerouslySetInnerHTML","__html","message","role","class","chatID","prompt","setPrompt","videoUrl","mathproblem","videoChatPrompt","_toConsumableArray","disabled","chatbotid","chatHistory","setChatHistory","getHistory","get","history","overflowY","scrollbarWidth","WebkitScrollbarWidth","scrollbarColor","WebkitScrollbarColor","Answer","chatbot","chatIDs","setChatIDs","_useState3","_useState4","getChatIDs","chat_name","WebkitOverflowScrolling","MsOverflowStyle","MdOutlineWorkHistory","Content","examplePrompts","item","componentRef","loading","dontFollow","notPrompts","showHistory","setShowHistory","History","ref","Loading","ShortForm","ExamplePrompts","useRef","_useState5","_useState6","_1_LessonPlanning","ChatForm","AnswerAndHistory","ExportButtons","_2_Quiz","selectedFile","setSelectedFile","formData","config","_iterator","_step","pair","FormData","_createForOfIteratorHelper","entries","s","n","done","err","f","rows","accept","files","checked","_3_AutomatedEssay","getAnswers","_4_ComprehensionLesson","_5_MathsQuiz","_6_MathLessonPlanner","setVideoURL","_error$response3","_7_VideotoNotes","setVidUrl","userinput","_useState7","_useState8","vidUrl","_8_VideotoQuizBot","setPlagAnswer","plag","setPlag","detect","setDetect","disableDetect","setDisableDetect","diablePlag","setDisablePlag","detectAnswer","plagAnswer","_yield$api$post","_data","_yield$api$post2","_data2","abrupt","match","t1","t2","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_9_DetectAI","Number","DonutChart","label","percentage","Array","isArray","backgroundColor","PlagDonutChart","minWidth","setFileName","fetchFile","number_of_slides","split","fileData","setFileData","_10_PowerPoint","responseType","blob","Blob","URL","createObjectURL","a","appendChild","revokeObjectURL","userData","setUserData","user","getUserData","_yield$api$put","put","firstName","lastName","country","emailUpdate","Layout","for","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","hanldeSubmit","setIsAuthenticated","setUser","deleteAccount","delete","defaults","common","localStorage","removeItem","email","setEmail","password","setPassword","handleTwoFA","enabled","TwoFA","Profile","ChangePassword","ChangeEmail","DeleteAccount","isAuthenticated","UsageProvider","ChatbotProvider","Aside","Routes","Route","path","element","Chatbots","LessonPlanner","Quiz","Essay","LessonComprehension","MathQuiz","MathLessonPlanner","VideoToNotes","VideoToQuiz","DetectAI","PowerPoint","Settings","Chart","register","ArcElement","chartData","labels","datasets","Doughnut","createContext","setUsage","setCreditWidth","setUploadBarWidth","_yield$api$get","_usage","upload","Provider"],"sourceRoot":""}